<?xml version="1.0" encoding="utf-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:tei="http://www.tei-c.org/ns/1.0"
         xmlns:teix="http://www.tei-c.org/ns/Examples"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://www.music-encoding.org/ns/mei"><!--
Schema generated from ODD source 2019-08-20T14:31:10Z. .
TEI Edition: Version 4.0.0
TEI Edition Location: http://www.tei-c.org/Vault/P5//
  
--><!---->
   <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron"
           prefix="tei"
           uri="http://www.tei-c.org/ns/1.0"/>
   <div ns="http://www.w3.org/2000/svg"
        datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
      <define name="svg_Boolean.datatype">
         <choice>
            <value>false</value>
            <value>true</value>
         </choice>
      </define>
      <define name="svg_ClipFillRule.datatype">
         <choice>
            <value>nonzero</value>
            <value>evenodd</value>
            <value>inherit</value>
         </choice>
      </define>
      <define name="svg_ContentType.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Coordinate.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Coordinates.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Color.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Integer.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_LanguageCode.datatype">
         <data type="NMTOKEN"/>
      </define>
      <define name="svg_LanguageCodes.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Length.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Lengths.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Number.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Numbers.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_OpacityValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_PathData.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_PreserveAspectRatioSpec.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Script.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVGColor.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_Text.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_TransformList.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_URI.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_ViewBoxSpec.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_XLINK.xmlns.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.xmlns.attrib">
         <ref name="svg_XLINK.xmlns.attrib"/>
      </define>
      <define name="svg_SVG.Description.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Description.class">
         <choice>
            <ref name="svg_desc"/>
            <ref name="svg_title"/>
            <ref name="svg_metadata"/>
            <ref name="svg_SVG.Description.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Use.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Use.class">
         <choice>
            <ref name="svg_use"/>
            <ref name="svg_SVG.Use.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Structure.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Structure.class">
         <choice>
            <ref name="svg_svg"/>
            <ref name="svg_g"/>
            <ref name="svg_defs"/>
            <ref name="svg_symbol"/>
            <ref name="svg_SVG.Use.class"/>
            <ref name="svg_SVG.Structure.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Conditional.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Conditional.class">
         <choice>
            <ref name="svg_switch"/>
            <ref name="svg_SVG.Conditional.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Image.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Image.class">
         <choice>
            <ref name="svg_image"/>
            <ref name="svg_SVG.Image.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Style.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Style.class">
         <choice>
            <ref name="svg_style"/>
            <ref name="svg_SVG.Style.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Shape.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Shape.class">
         <choice>
            <ref name="svg_path"/>
            <ref name="svg_rect"/>
            <ref name="svg_circle"/>
            <ref name="svg_line"/>
            <ref name="svg_ellipse"/>
            <ref name="svg_polyline"/>
            <ref name="svg_polygon"/>
            <ref name="svg_SVG.Shape.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Text.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Text.class">
         <choice>
            <ref name="svg_text"/>
            <ref name="svg_altGlyphDef"/>
            <ref name="svg_SVG.Text.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.TextContent.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.TextContent.class">
         <choice>
            <ref name="svg_tspan"/>
            <ref name="svg_tref"/>
            <ref name="svg_textPath"/>
            <ref name="svg_altGlyph"/>
            <ref name="svg_SVG.TextContent.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Marker.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Marker.class">
         <choice>
            <ref name="svg_marker"/>
            <ref name="svg_SVG.Marker.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.ColorProfile.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.ColorProfile.class">
         <choice>
            <ref name="svg_color-profile"/>
            <ref name="svg_SVG.ColorProfile.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Gradient.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Gradient.class">
         <choice>
            <ref name="svg_linearGradient"/>
            <ref name="svg_radialGradient"/>
            <ref name="svg_SVG.Gradient.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Pattern.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Pattern.class">
         <choice>
            <ref name="svg_svgpattern"/>
            <ref name="svg_SVG.Pattern.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Clip.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Clip.class">
         <choice>
            <ref name="svg_clipPath"/>
            <ref name="svg_SVG.Clip.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Mask.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Mask.class">
         <choice>
            <ref name="svg_mask"/>
            <ref name="svg_SVG.Mask.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Filter.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Filter.class">
         <choice>
            <ref name="svg_filter"/>
            <ref name="svg_SVG.Filter.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.FilterPrimitive.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.FilterPrimitive.class">
         <choice>
            <ref name="svg_feBlend"/>
            <ref name="svg_feColorMatrix"/>
            <ref name="svg_feComponentTransfer"/>
            <ref name="svg_feComposite"/>
            <ref name="svg_feConvolveMatrix"/>
            <ref name="svg_feDiffuseLighting"/>
            <ref name="svg_feDisplacementMap"/>
            <ref name="svg_feFlood"/>
            <ref name="svg_feGaussianBlur"/>
            <ref name="svg_feImage"/>
            <ref name="svg_feMerge"/>
            <ref name="svg_feMorphology"/>
            <ref name="svg_feOffset"/>
            <ref name="svg_feSpecularLighting"/>
            <ref name="svg_feTile"/>
            <ref name="svg_feTurbulence"/>
            <ref name="svg_SVG.FilterPrimitive.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Cursor.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Cursor.class">
         <choice>
            <ref name="svg_cursor"/>
            <ref name="svg_SVG.Cursor.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Hyperlink.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Hyperlink.class">
         <choice>
            <ref name="svg_a"/>
            <ref name="svg_SVG.Hyperlink.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.View.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.View.class">
         <choice>
            <ref name="svg_view"/>
            <ref name="svg_SVG.View.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Script.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Script.class">
         <choice>
            <ref name="svg_script"/>
            <ref name="svg_SVG.Script.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Animation.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Animation.class">
         <choice>
            <ref name="svg_animate"/>
            <ref name="svg_set"/>
            <ref name="svg_animateMotion"/>
            <ref name="svg_animateColor"/>
            <ref name="svg_animateTransform"/>
            <ref name="svg_SVG.Animation.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Font.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Font.class">
         <choice>
            <ref name="svg_font"/>
            <ref name="svg_font-face"/>
            <ref name="svg_SVG.Font.extra.class"/>
         </choice>
      </define>
      <define name="svg_SVG.Extensibility.extra.class">
         <notAllowed/>
      </define>
      <define name="svg_SVG.Extensibility.class">
         <choice>
            <ref name="svg_foreignObject"/>
            <ref name="svg_SVG.Extensibility.extra.class"/>
         </choice>
      </define>
      <define name="svg_ExtensionList.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_FeatureList.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Conditional.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Conditional.attrib">
         <optional>
            <attribute name="requiredFeatures">
               <ref name="svg_FeatureList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="requiredExtensions">
               <ref name="svg_ExtensionList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="systemLanguage">
               <ref name="svg_LanguageCodes.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Conditional.extra.attrib"/>
      </define>
      <define name="svg_ClassList.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_StyleSheet.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Style.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Style.attrib">
         <optional>
            <attribute name="style">
               <ref name="svg_StyleSheet.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="class">
               <ref name="svg_ClassList.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Style.extra.attrib"/>
      </define>
      <define name="svg_BaselineShiftValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_FontFamilyValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_FontSizeValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_FontSizeAdjustValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_GlyphOrientationHorizontalValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_GlyphOrientationVerticalValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_KerningValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SpacingValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_TextDecorationValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Text.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Text.attrib">
         <optional>
            <attribute name="writing-mode">
               <choice>
                  <value>lr-tb</value>
                  <value>rl-tb</value>
                  <value>tb-rl</value>
                  <value>lr</value>
                  <value>rl</value>
                  <value>tb</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <ref name="svg_SVG.Text.extra.attrib"/>
      </define>
      <define name="svg_SVG.TextContent.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.TextContent.attrib">
         <optional>
            <attribute name="alignment-baseline">
               <choice>
                  <value>auto</value>
                  <value>baseline</value>
                  <value>before-edge</value>
                  <value>text-before-edge</value>
                  <value>middle</value>
                  <value>central</value>
                  <value>after-edge</value>
                  <value>text-after-edge</value>
                  <value>ideographic</value>
                  <value>alphabetic</value>
                  <value>hanging</value>
                  <value>mathematical</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="baseline-shift">
               <ref name="svg_BaselineShiftValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="direction">
               <choice>
                  <value>ltr</value>
                  <value>rtl</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="dominant-baseline">
               <choice>
                  <value>auto</value>
                  <value>use-script</value>
                  <value>no-change</value>
                  <value>reset-size</value>
                  <value>ideographic</value>
                  <value>alphabetic</value>
                  <value>hanging</value>
                  <value>mathematical</value>
                  <value>central</value>
                  <value>middle</value>
                  <value>text-after-edge</value>
                  <value>text-before-edge</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="glyph-orientation-horizontal">
               <ref name="svg_GlyphOrientationHorizontalValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="glyph-orientation-vertical">
               <ref name="svg_GlyphOrientationVerticalValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="kerning">
               <ref name="svg_KerningValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="letter-spacing">
               <ref name="svg_SpacingValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="text-anchor">
               <choice>
                  <value>start</value>
                  <value>middle</value>
                  <value>end</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="text-decoration">
               <ref name="svg_TextDecorationValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="unicode-bidi">
               <choice>
                  <value>normal</value>
                  <value>embed</value>
                  <value>bidi-override</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="word-spacing">
               <ref name="svg_SpacingValue.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.TextContent.extra.attrib"/>
      </define>
      <define name="svg_SVG.Font.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Font.attrib">
         <optional>
            <attribute name="font-family">
               <ref name="svg_FontFamilyValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="font-size">
               <ref name="svg_FontSizeValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="font-size-adjust">
               <ref name="svg_FontSizeAdjustValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="font-stretch">
               <choice>
                  <value>normal</value>
                  <value>wider</value>
                  <value>narrower</value>
                  <value>ultra-condensed</value>
                  <value>extra-condensed</value>
                  <value>condensed</value>
                  <value>semi-condensed</value>
                  <value>semi-expanded</value>
                  <value>expanded</value>
                  <value>extra-expanded</value>
                  <value>ultra-expanded</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="font-style">
               <choice>
                  <value>normal</value>
                  <value>italic</value>
                  <value>oblique</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="font-variant">
               <choice>
                  <value>normal</value>
                  <value>small-caps</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="font-weight">
               <choice>
                  <value>normal</value>
                  <value>bold</value>
                  <value>bolder</value>
                  <value>lighter</value>
                  <value>100</value>
                  <value>200</value>
                  <value>300</value>
                  <value>400</value>
                  <value>500</value>
                  <value>600</value>
                  <value>700</value>
                  <value>800</value>
                  <value>900</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <ref name="svg_SVG.Font.extra.attrib"/>
      </define>
      <define name="svg_MarkerValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Marker.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Marker.attrib">
         <optional>
            <attribute name="marker-start">
               <ref name="svg_MarkerValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="marker-mid">
               <ref name="svg_MarkerValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="marker-end">
               <ref name="svg_MarkerValue.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Marker.extra.attrib"/>
      </define>
      <define name="svg_SVG.ColorProfile.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.ColorProfile.attrib">
         <optional>
            <attribute name="color-profile"/>
         </optional>
         <ref name="svg_SVG.ColorProfile.extra.attrib"/>
      </define>
      <define name="svg_NumberOrPercentage.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Gradient.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Gradient.attrib">
         <optional>
            <attribute name="stop-color">
               <ref name="svg_SVGColor.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="stop-opacity">
               <ref name="svg_OpacityValue.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Gradient.extra.attrib"/>
      </define>
      <define name="svg_ClipPathValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Clip.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Clip.attrib">
         <optional>
            <attribute name="clip-path">
               <ref name="svg_ClipPathValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="clip-rule">
               <ref name="svg_ClipFillRule.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Clip.extra.attrib"/>
      </define>
      <define name="svg_MaskValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Mask.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Mask.attrib">
         <optional>
            <attribute name="mask">
               <ref name="svg_MaskValue.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Mask.extra.attrib"/>
      </define>
      <define name="svg_FilterValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_NumberOptionalNumber.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Filter.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Filter.attrib">
         <optional>
            <attribute name="filter">
               <ref name="svg_FilterValue.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Filter.extra.attrib"/>
      </define>
      <define name="svg_SVG.FilterColor.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.FilterColor.attrib">
         <optional>
            <attribute name="color-interpolation-filters">
               <choice>
                  <value>auto</value>
                  <value>sRGB</value>
                  <value>linearRGB</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
         <ref name="svg_SVG.FilterColor.extra.attrib"/>
      </define>
      <define name="svg_CursorValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.Cursor.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Cursor.attrib">
         <optional>
            <attribute name="cursor">
               <ref name="svg_CursorValue.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Cursor.extra.attrib"/>
      </define>
      <define name="svg_SVG.id.attrib">
         <optional>
            <attribute name="id">
               <data type="ID"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.base.attrib">
         <optional>
            <attribute name="xml:base">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.lang.attrib">
         <optional>
            <attribute name="xml:lang">
               <ref name="svg_LanguageCode.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.space.attrib">
         <optional>
            <attribute name="xml:space">
               <choice>
                  <value>default</value>
                  <value>preserve</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Core.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Core.attrib">
         <ref name="svg_SVG.id.attrib"/>
         <ref name="svg_SVG.base.attrib"/>
         <ref name="svg_SVG.lang.attrib"/>
         <ref name="svg_SVG.space.attrib"/>
         <ref name="svg_SVG.Core.extra.attrib"/>
      </define>
      <define name="svg_EnableBackgroundValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.enable-background.attrib">
         <optional>
            <attribute name="enable-background">
               <ref name="svg_EnableBackgroundValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Container.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Container.attrib">
         <ref name="svg_SVG.enable-background.attrib"/>
         <ref name="svg_SVG.Container.extra.attrib"/>
      </define>
      <define name="svg_ClipValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.clip.attrib">
         <optional>
            <attribute name="clip">
               <ref name="svg_ClipValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.overflow.attrib">
         <optional>
            <attribute name="overflow">
               <choice>
                  <value>visible</value>
                  <value>hidden</value>
                  <value>scroll</value>
                  <value>auto</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Viewport.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Viewport.attrib">
         <ref name="svg_SVG.clip.attrib"/>
         <ref name="svg_SVG.overflow.attrib"/>
         <ref name="svg_SVG.Viewport.extra.attrib"/>
      </define>
      <define name="svg_Paint.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_StrokeDashArrayValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_StrokeDashOffsetValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_StrokeMiterLimitValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_StrokeWidthValue.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.fill.attrib">
         <optional>
            <attribute name="fill">
               <ref name="svg_Paint.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.fill-rule.attrib">
         <optional>
            <attribute name="fill-rule">
               <ref name="svg_ClipFillRule.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke.attrib">
         <optional>
            <attribute name="stroke">
               <ref name="svg_Paint.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-dasharray.attrib">
         <optional>
            <attribute name="stroke-dasharray">
               <ref name="svg_StrokeDashArrayValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-dashoffset.attrib">
         <optional>
            <attribute name="stroke-dashoffset">
               <ref name="svg_StrokeDashOffsetValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-linecap.attrib">
         <optional>
            <attribute name="stroke-linecap">
               <choice>
                  <value>butt</value>
                  <value>round</value>
                  <value>square</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-linejoin.attrib">
         <optional>
            <attribute name="stroke-linejoin">
               <choice>
                  <value>miter</value>
                  <value>round</value>
                  <value>bevel</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-miterlimit.attrib">
         <optional>
            <attribute name="stroke-miterlimit">
               <ref name="svg_StrokeMiterLimitValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-width.attrib">
         <optional>
            <attribute name="stroke-width">
               <ref name="svg_StrokeWidthValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Paint.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Paint.attrib">
         <ref name="svg_SVG.fill.attrib"/>
         <ref name="svg_SVG.fill-rule.attrib"/>
         <ref name="svg_SVG.stroke.attrib"/>
         <ref name="svg_SVG.stroke-dasharray.attrib"/>
         <ref name="svg_SVG.stroke-dashoffset.attrib"/>
         <ref name="svg_SVG.stroke-linecap.attrib"/>
         <ref name="svg_SVG.stroke-linejoin.attrib"/>
         <ref name="svg_SVG.stroke-miterlimit.attrib"/>
         <ref name="svg_SVG.stroke-width.attrib"/>
         <ref name="svg_SVG.Paint.extra.attrib"/>
      </define>
      <define name="svg_SVG.color.attrib">
         <optional>
            <attribute name="color">
               <ref name="svg_Color.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.color-interpolation.attrib">
         <optional>
            <attribute name="color-interpolation">
               <choice>
                  <value>auto</value>
                  <value>sRGB</value>
                  <value>linearRGB</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.color-rendering.attrib">
         <optional>
            <attribute name="color-rendering">
               <choice>
                  <value>auto</value>
                  <value>optimizeSpeed</value>
                  <value>optimizeQuality</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Color.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Color.attrib">
         <ref name="svg_SVG.color.attrib"/>
         <ref name="svg_SVG.color-interpolation.attrib"/>
         <ref name="svg_SVG.color-rendering.attrib"/>
         <ref name="svg_SVG.Color.extra.attrib"/>
      </define>
      <define name="svg_SVG.opacity.attrib">
         <optional>
            <attribute name="opacity">
               <ref name="svg_OpacityValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.fill-opacity.attrib">
         <optional>
            <attribute name="fill-opacity">
               <ref name="svg_OpacityValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stroke-opacity.attrib">
         <optional>
            <attribute name="stroke-opacity">
               <ref name="svg_OpacityValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Opacity.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Opacity.attrib">
         <ref name="svg_SVG.opacity.attrib"/>
         <ref name="svg_SVG.fill-opacity.attrib"/>
         <ref name="svg_SVG.stroke-opacity.attrib"/>
         <ref name="svg_SVG.Opacity.extra.attrib"/>
      </define>
      <define name="svg_SVG.display.attrib">
         <optional>
            <attribute name="display">
               <choice>
                  <value>inline</value>
                  <value>block</value>
                  <value>list-item</value>
                  <value>run-in</value>
                  <value>compact</value>
                  <value>marker</value>
                  <value>table</value>
                  <value>inline-table</value>
                  <value>table-row-group</value>
                  <value>table-header-group</value>
                  <value>table-footer-group</value>
                  <value>table-row</value>
                  <value>table-column-group</value>
                  <value>table-column</value>
                  <value>table-cell</value>
                  <value>table-caption</value>
                  <value>none</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.image-rendering.attrib">
         <optional>
            <attribute name="image-rendering">
               <choice>
                  <value>auto</value>
                  <value>optimizeSpeed</value>
                  <value>optimizeQuality</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.pointer-events.attrib">
         <optional>
            <attribute name="pointer-events">
               <choice>
                  <value>visiblePainted</value>
                  <value>visibleFill</value>
                  <value>visibleStroke</value>
                  <value>visible</value>
                  <value>painted</value>
                  <value>fill</value>
                  <value>stroke</value>
                  <value>all</value>
                  <value>none</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.shape-rendering.attrib">
         <optional>
            <attribute name="shape-rendering">
               <choice>
                  <value>auto</value>
                  <value>optimizeSpeed</value>
                  <value>crispEdges</value>
                  <value>geometricPrecision</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.text-rendering.attrib">
         <optional>
            <attribute name="text-rendering">
               <choice>
                  <value>auto</value>
                  <value>optimizeSpeed</value>
                  <value>optimizeLegibility</value>
                  <value>geometricPrecision</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.visibility.attrib">
         <optional>
            <attribute name="visibility">
               <choice>
                  <value>visible</value>
                  <value>hidden</value>
                  <value>inherit</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.Graphics.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Graphics.attrib">
         <ref name="svg_SVG.display.attrib"/>
         <ref name="svg_SVG.image-rendering.attrib"/>
         <ref name="svg_SVG.pointer-events.attrib"/>
         <ref name="svg_SVG.shape-rendering.attrib"/>
         <ref name="svg_SVG.text-rendering.attrib"/>
         <ref name="svg_SVG.visibility.attrib"/>
         <ref name="svg_SVG.Graphics.extra.attrib"/>
      </define>
      <define name="svg_SVG.onunload.attrib">
         <optional>
            <attribute name="onunload">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onabort.attrib">
         <optional>
            <attribute name="onabort">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onerror.attrib">
         <optional>
            <attribute name="onerror">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onresize.attrib">
         <optional>
            <attribute name="onresize">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onscroll.attrib">
         <optional>
            <attribute name="onscroll">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onzoom.attrib">
         <optional>
            <attribute name="onzoom">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.DocumentEvents.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.DocumentEvents.attrib">
         <ref name="svg_SVG.onunload.attrib"/>
         <ref name="svg_SVG.onabort.attrib"/>
         <ref name="svg_SVG.onerror.attrib"/>
         <ref name="svg_SVG.onresize.attrib"/>
         <ref name="svg_SVG.onscroll.attrib"/>
         <ref name="svg_SVG.onzoom.attrib"/>
         <ref name="svg_SVG.DocumentEvents.extra.attrib"/>
      </define>
      <define name="svg_SVG.onfocusin.attrib">
         <optional>
            <attribute name="onfocusin">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onfocusout.attrib">
         <optional>
            <attribute name="onfocusout">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onactivate.attrib">
         <optional>
            <attribute name="onactivate">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onclick.attrib">
         <optional>
            <attribute name="onclick">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onmousedown.attrib">
         <optional>
            <attribute name="onmousedown">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onmouseup.attrib">
         <optional>
            <attribute name="onmouseup">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onmouseover.attrib">
         <optional>
            <attribute name="onmouseover">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onmousemove.attrib">
         <optional>
            <attribute name="onmousemove">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onmouseout.attrib">
         <optional>
            <attribute name="onmouseout">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onload.attrib">
         <optional>
            <attribute name="onload">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.GraphicalEvents.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.GraphicalEvents.attrib">
         <ref name="svg_SVG.onfocusin.attrib"/>
         <ref name="svg_SVG.onfocusout.attrib"/>
         <ref name="svg_SVG.onactivate.attrib"/>
         <ref name="svg_SVG.onclick.attrib"/>
         <ref name="svg_SVG.onmousedown.attrib"/>
         <ref name="svg_SVG.onmouseup.attrib"/>
         <ref name="svg_SVG.onmouseover.attrib"/>
         <ref name="svg_SVG.onmousemove.attrib"/>
         <ref name="svg_SVG.onmouseout.attrib"/>
         <ref name="svg_SVG.onload.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.extra.attrib"/>
      </define>
      <define name="svg_SVG.onbegin.attrib">
         <optional>
            <attribute name="onbegin">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onend.attrib">
         <optional>
            <attribute name="onend">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.onrepeat.attrib">
         <optional>
            <attribute name="onrepeat">
               <ref name="svg_Script.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.AnimationEvents.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.AnimationEvents.attrib">
         <ref name="svg_SVG.onbegin.attrib"/>
         <ref name="svg_SVG.onend.attrib"/>
         <ref name="svg_SVG.onrepeat.attrib"/>
         <ref name="svg_SVG.onload.attrib"/>
         <ref name="svg_SVG.AnimationEvents.extra.attrib"/>
      </define>
      <define name="svg_SVG.XLink.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.XLink.attrib">
         <ref name="svg_XLINK.xmlns.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:type"
                       a:defaultValue="simple">
               <value>simple</value>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:href">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:role">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:arcrole">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:title"/>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:show"
                       a:defaultValue="other">
               <choice>
                  <value>other</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:actuate"
                       a:defaultValue="onLoad">
               <value>onLoad</value>
            </attribute>
         </optional>
         <ref name="svg_SVG.XLink.extra.attrib"/>
      </define>
      <define name="svg_SVG.XLinkRequired.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.XLinkRequired.attrib">
         <ref name="svg_XLINK.xmlns.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:type"
                       a:defaultValue="simple">
               <value>simple</value>
            </attribute>
         </optional>
         <attribute name="xlink:href">
            <ref name="svg_URI.datatype"/>
         </attribute>
         <optional>
            <attribute name="xlink:role">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:arcrole">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:title"/>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:show"
                       a:defaultValue="other">
               <choice>
                  <value>other</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:actuate"
                       a:defaultValue="onLoad">
               <value>onLoad</value>
            </attribute>
         </optional>
         <ref name="svg_SVG.XLinkRequired.extra.attrib"/>
      </define>
      <define name="svg_SVG.XLinkEmbed.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.XLinkEmbed.attrib">
         <ref name="svg_XLINK.xmlns.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:type"
                       a:defaultValue="simple">
               <value>simple</value>
            </attribute>
         </optional>
         <attribute name="xlink:href">
            <ref name="svg_URI.datatype"/>
         </attribute>
         <optional>
            <attribute name="xlink:role">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:arcrole">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:title"/>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:show"
                       a:defaultValue="embed">
               <choice>
                  <value>embed</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:actuate"
                       a:defaultValue="onLoad">
               <value>onLoad</value>
            </attribute>
         </optional>
         <ref name="svg_SVG.XLinkEmbed.extra.attrib"/>
      </define>
      <define name="svg_SVG.XLinkReplace.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.XLinkReplace.attrib">
         <ref name="svg_XLINK.xmlns.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:type"
                       a:defaultValue="simple">
               <value>simple</value>
            </attribute>
         </optional>
         <attribute name="xlink:href">
            <ref name="svg_URI.datatype"/>
         </attribute>
         <optional>
            <attribute name="xlink:role">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:arcrole">
               <ref name="svg_URI.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="xlink:title"/>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:show"
                       a:defaultValue="replace">
               <choice>
                  <value>new</value>
                  <value>replace</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xlink:actuate"
                       a:defaultValue="onRequest">
               <value>onRequest</value>
            </attribute>
         </optional>
         <ref name="svg_SVG.XLinkReplace.extra.attrib"/>
      </define>
      <define name="svg_SVG.externalResourcesRequired.attrib">
         <optional>
            <attribute name="externalResourcesRequired">
               <ref name="svg_Boolean.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.External.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.External.attrib">
         <ref name="svg_SVG.externalResourcesRequired.attrib"/>
         <ref name="svg_SVG.External.extra.attrib"/>
      </define>
      <define name="svg_SVG.Presentation.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Presentation.attrib">
         <ref name="svg_SVG.Container.attrib"/>
         <ref name="svg_SVG.Viewport.attrib"/>
         <ref name="svg_SVG.Text.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Marker.attrib"/>
         <ref name="svg_SVG.ColorProfile.attrib"/>
         <ref name="svg_SVG.Gradient.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <optional>
            <attribute name="flood-color">
               <ref name="svg_SVGColor.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="flood-opacity">
               <ref name="svg_OpacityValue.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="lighting-color">
               <ref name="svg_SVGColor.datatype"/>
            </attribute>
         </optional>
         <ref name="svg_SVG.Presentation.extra.attrib"/>
      </define>
      <define name="svg_SVG.svg.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.svg.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.svg.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_svg">
         <element name="svg">
            <ref name="svg_attlist.svg"/>
            <ref name="svg_SVG.svg.content"/>
         </element>
      </define>
      <define name="svg_attlist.svg" combine="interleave">
         <ref name="svg_SVG.xmlns.attrib"/>
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.DocumentEvents.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="width">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="height">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="viewBox">
               <ref name="svg_ViewBoxSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="zoomAndPan"
                       a:defaultValue="magnify">
               <choice>
                  <value>disable</value>
                  <value>magnify</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="version"
                       a:defaultValue="1.1">
               <value type="string" datatypeLibrary="">1.1</value>
            </attribute>
         </optional>
         <optional>
            <attribute name="baseProfile">
               <ref name="svg_Text.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="contentScriptType"
                       a:defaultValue="text/ecmascript">
               <ref name="svg_ContentType.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="contentStyleType"
                       a:defaultValue="text/css">
               <ref name="svg_ContentType.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.g.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.g.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.g.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_g">
         <element name="g">
            <ref name="svg_attlist.g"/>
            <ref name="svg_SVG.g.content"/>
         </element>
      </define>
      <define name="svg_attlist.g" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.defs.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.defs.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.defs.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_defs">
         <element name="defs">
            <ref name="svg_attlist.defs"/>
            <ref name="svg_SVG.defs.content"/>
         </element>
      </define>
      <define name="svg_attlist.defs" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.desc.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.desc.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.desc.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_desc">
         <element name="desc">
            <ref name="svg_attlist.desc"/>
            <ref name="svg_SVG.desc.content"/>
         </element>
      </define>
      <define name="svg_attlist.desc" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
      </define>
      <define name="svg_SVG.title.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.title.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.title.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_title">
         <element name="title">
            <ref name="svg_attlist.title"/>
            <ref name="svg_SVG.title.content"/>
         </element>
      </define>
      <define name="svg_attlist.title" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
      </define>
      <define name="svg_SVG.metadata.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.metadata.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.metadata.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_metadata">
         <element name="metadata">
            <ref name="svg_attlist.metadata"/>
            <ref name="svg_SVG.metadata.content"/>
         </element>
      </define>
      <define name="svg_attlist.metadata" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
      </define>
      <define name="svg_SVG.symbol.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.symbol.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.symbol.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_symbol">
         <element name="symbol">
            <ref name="svg_attlist.symbol"/>
            <ref name="svg_SVG.symbol.content"/>
         </element>
      </define>
      <define name="svg_attlist.symbol" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="viewBox">
               <ref name="svg_ViewBoxSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.use.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.use.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.use.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_use">
         <element name="use">
            <ref name="svg_attlist.use"/>
            <ref name="svg_SVG.use.content"/>
         </element>
      </define>
      <define name="svg_attlist.use" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.XLinkEmbed.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="width">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="height">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.switch.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.switch.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_svg"/>
               <ref name="svg_g"/>
               <ref name="svg_use"/>
               <ref name="svg_text"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.Extensibility.class"/>
               <ref name="svg_SVG.switch.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_switch">
         <element name="switch">
            <ref name="svg_attlist.switch"/>
            <ref name="svg_SVG.switch.content"/>
         </element>
      </define>
      <define name="svg_attlist.switch" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.image.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.image.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.image.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_image">
         <element name="image">
            <ref name="svg_attlist.image"/>
            <ref name="svg_SVG.image.content"/>
         </element>
      </define>
      <define name="svg_attlist.image" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Viewport.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.ColorProfile.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.XLinkEmbed.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <attribute name="width">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <attribute name="height">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_MediaDesc.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.style.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.style.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.style.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_style">
         <element name="style">
            <ref name="svg_attlist.style"/>
            <ref name="svg_SVG.style.content"/>
         </element>
      </define>
      <define name="svg_attlist.style" combine="interleave">
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xml:space"
                       a:defaultValue="preserve">
               <value>preserve</value>
            </attribute>
         </optional>
         <ref name="svg_SVG.id.attrib"/>
         <ref name="svg_SVG.base.attrib"/>
         <ref name="svg_SVG.lang.attrib"/>
         <ref name="svg_SVG.Core.extra.attrib"/>
         <attribute name="type">
            <ref name="svg_ContentType.datatype"/>
         </attribute>
         <optional>
            <attribute name="media">
               <ref name="svg_MediaDesc.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="title">
               <ref name="svg_Text.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_Points.datatype">
         <data type="string" datatypeLibrary=""/>
      </define>
      <define name="svg_SVG.path.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.path.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.path.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_path">
         <element name="path">
            <ref name="svg_attlist.path"/>
            <ref name="svg_SVG.path.content"/>
         </element>
      </define>
      <define name="svg_attlist.path" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Marker.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <attribute name="d">
            <ref name="svg_PathData.datatype"/>
         </attribute>
         <optional>
            <attribute name="pathLength">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.rect.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.rect.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.rect.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_rect">
         <element name="rect">
            <ref name="svg_attlist.rect"/>
            <ref name="svg_SVG.rect.content"/>
         </element>
      </define>
      <define name="svg_attlist.rect" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <attribute name="width">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <attribute name="height">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <optional>
            <attribute name="rx">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="ry">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.circle.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.circle.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.circle.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_circle">
         <element name="circle">
            <ref name="svg_attlist.circle"/>
            <ref name="svg_SVG.circle.content"/>
         </element>
      </define>
      <define name="svg_attlist.circle" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="cx">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="cy">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <attribute name="r">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.line.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.line.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.line.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_line">
         <element name="line">
            <ref name="svg_attlist.line"/>
            <ref name="svg_SVG.line.content"/>
         </element>
      </define>
      <define name="svg_attlist.line" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Marker.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x1">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y1">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="x2">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y2">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.ellipse.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.ellipse.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.ellipse.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_ellipse">
         <element name="ellipse">
            <ref name="svg_attlist.ellipse"/>
            <ref name="svg_SVG.ellipse.content"/>
         </element>
      </define>
      <define name="svg_attlist.ellipse" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="cx">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="cy">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <attribute name="rx">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <attribute name="ry">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.polyline.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.polyline.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.polyline.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_polyline">
         <element name="polyline">
            <ref name="svg_attlist.polyline"/>
            <ref name="svg_SVG.polyline.content"/>
         </element>
      </define>
      <define name="svg_attlist.polyline" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Marker.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <attribute name="points">
            <ref name="svg_Points.datatype"/>
         </attribute>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.polygon.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.polygon.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.polygon.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_polygon">
         <element name="polygon">
            <ref name="svg_attlist.polygon"/>
            <ref name="svg_SVG.polygon.content"/>
         </element>
      </define>
      <define name="svg_attlist.polygon" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Marker.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <attribute name="points">
            <ref name="svg_Points.datatype"/>
         </attribute>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.text.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.text.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.TextContent.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.text.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_text">
         <element name="text">
            <ref name="svg_attlist.text"/>
            <ref name="svg_SVG.text.content"/>
         </element>
      </define>
      <define name="svg_attlist.text" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Text.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dx">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dy">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="rotate">
               <ref name="svg_Numbers.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="textLength">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="lengthAdjust">
               <choice>
                  <value>spacing</value>
                  <value>spacingAndGlyphs</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.tspan.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.tspan.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_tspan"/>
               <ref name="svg_tref"/>
               <ref name="svg_altGlyph"/>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.tspan.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_tspan">
         <element name="tspan">
            <ref name="svg_attlist.tspan"/>
            <ref name="svg_SVG.tspan.content"/>
         </element>
      </define>
      <define name="svg_attlist.tspan" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dx">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dy">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="rotate">
               <ref name="svg_Numbers.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="textLength">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="lengthAdjust">
               <choice>
                  <value>spacing</value>
                  <value>spacingAndGlyphs</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.tref.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.tref.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.tref.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_tref">
         <element name="tref">
            <ref name="svg_attlist.tref"/>
            <ref name="svg_SVG.tref.content"/>
         </element>
      </define>
      <define name="svg_attlist.tref" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.XLinkRequired.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dx">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dy">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="rotate">
               <ref name="svg_Numbers.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="textLength">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="lengthAdjust">
               <choice>
                  <value>spacing</value>
                  <value>spacingAndGlyphs</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.textPath.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.textPath.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_tspan"/>
               <ref name="svg_tref"/>
               <ref name="svg_altGlyph"/>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.textPath.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_textPath">
         <element name="textPath">
            <ref name="svg_attlist.textPath"/>
            <ref name="svg_SVG.textPath.content"/>
         </element>
      </define>
      <define name="svg_attlist.textPath" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.XLinkRequired.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="startOffset">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="textLength">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="lengthAdjust">
               <choice>
                  <value>spacing</value>
                  <value>spacingAndGlyphs</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="method">
               <choice>
                  <value>align</value>
                  <value>stretch</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="spacing">
               <choice>
                  <value>auto</value>
                  <value>exact</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.altGlyph.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.altGlyph.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.altGlyph.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_altGlyph">
         <element name="altGlyph">
            <ref name="svg_attlist.altGlyph"/>
            <ref name="svg_SVG.altGlyph.content"/>
         </element>
      </define>
      <define name="svg_attlist.altGlyph" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinates.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dx">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dy">
               <ref name="svg_Lengths.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="glyphRef"/>
         </optional>
         <optional>
            <attribute name="format"/>
         </optional>
         <optional>
            <attribute name="rotate">
               <ref name="svg_Numbers.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.altGlyphDef.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.altGlyphDef.content">
         <choice>
            <choice>
               <oneOrMore>
                  <ref name="svg_glyphRef"/>
               </oneOrMore>
               <oneOrMore>
                  <ref name="svg_altGlyphItem"/>
               </oneOrMore>
            </choice>
            <ref name="svg_SVG.altGlyphDef.extra.content"/>
         </choice>
      </define>
      <define name="svg_altGlyphDef">
         <element name="altGlyphDef">
            <ref name="svg_attlist.altGlyphDef"/>
            <ref name="svg_SVG.altGlyphDef.content"/>
         </element>
      </define>
      <define name="svg_attlist.altGlyphDef" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
      </define>
      <define name="svg_SVG.altGlyphItem.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.altGlyphItem.content">
         <choice>
            <oneOrMore>
               <ref name="svg_glyphRef"/>
            </oneOrMore>
            <ref name="svg_SVG.altGlyphItem.extra.content"/>
         </choice>
      </define>
      <define name="svg_altGlyphItem">
         <element name="altGlyphItem">
            <ref name="svg_attlist.altGlyphItem"/>
            <ref name="svg_SVG.altGlyphItem.content"/>
         </element>
      </define>
      <define name="svg_attlist.altGlyphItem" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
      </define>
      <define name="svg_SVG.glyphRef.content">
         <empty/>
      </define>
      <define name="svg_glyphRef">
         <element name="glyphRef">
            <ref name="svg_attlist.glyphRef"/>
            <ref name="svg_SVG.glyphRef.content"/>
         </element>
      </define>
      <define name="svg_attlist.glyphRef" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dx">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dy">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="glyphRef"/>
         </optional>
         <optional>
            <attribute name="format"/>
         </optional>
      </define>
      <define name="svg_SVG.marker.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.marker.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.marker.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_marker">
         <element name="marker">
            <ref name="svg_attlist.marker"/>
            <ref name="svg_SVG.marker.content"/>
         </element>
      </define>
      <define name="svg_attlist.marker" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="refX">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="refY">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="markerUnits">
               <choice>
                  <value>strokeWidth</value>
                  <value>userSpaceOnUse</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="markerWidth">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="markerHeight">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="orient"/>
         </optional>
         <optional>
            <attribute name="viewBox">
               <ref name="svg_ViewBoxSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.color-profile.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.color-profile.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.color-profile.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_color-profile">
         <element name="color-profile">
            <ref name="svg_attlist.color-profile"/>
            <ref name="svg_SVG.color-profile.content"/>
         </element>
      </define>
      <define name="svg_attlist.color-profile" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <optional>
            <attribute name="local"/>
         </optional>
         <attribute name="name"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="rendering-intent"
                       a:defaultValue="auto">
               <choice>
                  <value>auto</value>
                  <value>perceptual</value>
                  <value>relative-colorimetric</value>
                  <value>saturation</value>
                  <value>absolute-colorimetric</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.linearGradient.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.linearGradient.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_stop"/>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateTransform"/>
               <ref name="svg_SVG.linearGradient.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_linearGradient">
         <element name="linearGradient">
            <ref name="svg_attlist.linearGradient"/>
            <ref name="svg_SVG.linearGradient.content"/>
         </element>
      </define>
      <define name="svg_attlist.linearGradient" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Gradient.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x1">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y1">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="x2">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y2">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="gradientUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="gradientTransform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="spreadMethod">
               <choice>
                  <value>pad</value>
                  <value>reflect</value>
                  <value>repeat</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.radialGradient.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.radialGradient.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_stop"/>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateTransform"/>
               <ref name="svg_SVG.radialGradient.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_radialGradient">
         <element name="radialGradient">
            <ref name="svg_attlist.radialGradient"/>
            <ref name="svg_SVG.radialGradient.content"/>
         </element>
      </define>
      <define name="svg_attlist.radialGradient" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Gradient.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="cx">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="cy">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="r">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="fx">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="fy">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="gradientUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="gradientTransform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="spreadMethod">
               <choice>
                  <value>pad</value>
                  <value>reflect</value>
                  <value>repeat</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.stop.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.stop.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.stop.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_stop">
         <element name="stop">
            <ref name="svg_attlist.stop"/>
            <ref name="svg_SVG.stop.content"/>
         </element>
      </define>
      <define name="svg_attlist.stop" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Gradient.attrib"/>
         <attribute name="offset">
            <ref name="svg_NumberOrPercentage.datatype"/>
         </attribute>
      </define>
      <define name="svg_SVG.pattern.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.pattern.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.pattern.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_svgpattern">
         <element name="pattern">
            <ref name="svg_attlist.pattern"/>
            <ref name="svg_SVG.pattern.content"/>
         </element>
      </define>
      <define name="svg_attlist.pattern" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="width">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="height">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="patternUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="patternContentUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="patternTransform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="viewBox">
               <ref name="svg_ViewBoxSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.clipPath.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.clipPath.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Use.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.clipPath.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_clipPath">
         <element name="clipPath">
            <ref name="svg_attlist.clipPath"/>
            <ref name="svg_SVG.clipPath.content"/>
         </element>
      </define>
      <define name="svg_attlist.clipPath" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Text.attrib"/>
         <ref name="svg_SVG.TextContent.attrib"/>
         <ref name="svg_SVG.Font.attrib"/>
         <ref name="svg_SVG.Paint.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.Opacity.attrib"/>
         <ref name="svg_SVG.Graphics.attrib"/>
         <ref name="svg_SVG.Clip.attrib"/>
         <ref name="svg_SVG.Mask.attrib"/>
         <ref name="svg_SVG.Filter.attrib"/>
         <ref name="svg_SVG.Cursor.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="clipPathUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.mask.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.mask.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.mask.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_mask">
         <element name="mask">
            <ref name="svg_attlist.mask"/>
            <ref name="svg_SVG.mask.content"/>
         </element>
      </define>
      <define name="svg_attlist.mask" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="width">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="height">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="maskUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="maskContentUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.FilterPrimitive.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.FilterPrimitive.attrib">
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="width">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="height">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="result"/>
         </optional>
         <ref name="svg_SVG.FilterPrimitive.extra.attrib"/>
      </define>
      <define name="svg_SVG.FilterPrimitiveWithIn.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.FilterPrimitiveWithIn.attrib">
         <ref name="svg_SVG.FilterPrimitive.attrib"/>
         <optional>
            <attribute name="in"/>
         </optional>
         <ref name="svg_SVG.FilterPrimitiveWithIn.extra.attrib"/>
      </define>
      <define name="svg_SVG.filter.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.filter.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.FilterPrimitive.class"/>
               <ref name="svg_SVG.filter.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_filter">
         <element name="filter">
            <ref name="svg_attlist.filter"/>
            <ref name="svg_SVG.filter.content"/>
         </element>
      </define>
      <define name="svg_attlist.filter" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="width">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="height">
               <ref name="svg_Length.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="filterRes">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="filterUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="primitiveUnits">
               <choice>
                  <value>userSpaceOnUse</value>
                  <value>objectBoundingBox</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feBlend.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feBlend.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feBlend.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feBlend">
         <element name="feBlend">
            <ref name="svg_attlist.feBlend"/>
            <ref name="svg_SVG.feBlend.content"/>
         </element>
      </define>
      <define name="svg_attlist.feBlend" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <attribute name="in2"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="mode"
                       a:defaultValue="normal">
               <choice>
                  <value>normal</value>
                  <value>multiply</value>
                  <value>screen</value>
                  <value>darken</value>
                  <value>lighten</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feColorMatrix.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feColorMatrix.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feColorMatrix.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feColorMatrix">
         <element name="feColorMatrix">
            <ref name="svg_attlist.feColorMatrix"/>
            <ref name="svg_SVG.feColorMatrix.content"/>
         </element>
      </define>
      <define name="svg_attlist.feColorMatrix" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="type"
                       a:defaultValue="matrix">
               <choice>
                  <value>matrix</value>
                  <value>saturate</value>
                  <value>hueRotate</value>
                  <value>luminanceToAlpha</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="values"/>
         </optional>
      </define>
      <define name="svg_SVG.feComponentTransfer.extra.content">
         <empty/>
      </define>
      <define name="svg_SVG.feComponentTransfer.content">
         <optional>
            <ref name="svg_feFuncR"/>
         </optional>
         <optional>
            <ref name="svg_feFuncG"/>
         </optional>
         <optional>
            <ref name="svg_feFuncB"/>
         </optional>
         <optional>
            <ref name="svg_feFuncA"/>
         </optional>
         <ref name="svg_SVG.feComponentTransfer.extra.content"/>
      </define>
      <define name="svg_feComponentTransfer">
         <element name="feComponentTransfer">
            <ref name="svg_attlist.feComponentTransfer"/>
            <ref name="svg_SVG.feComponentTransfer.content"/>
         </element>
      </define>
      <define name="svg_attlist.feComponentTransfer" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
      </define>
      <define name="svg_SVG.feComposite.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feComposite.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feComposite.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feComposite">
         <element name="feComposite">
            <ref name="svg_attlist.feComposite"/>
            <ref name="svg_SVG.feComposite.content"/>
         </element>
      </define>
      <define name="svg_attlist.feComposite" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <attribute name="in2"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="operator"
                       a:defaultValue="over">
               <choice>
                  <value>over</value>
                  <value>in</value>
                  <value>out</value>
                  <value>atop</value>
                  <value>xor</value>
                  <value>arithmetic</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="k1">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="k2">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="k3">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="k4">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feConvolveMatrix.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feConvolveMatrix.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feConvolveMatrix.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feConvolveMatrix">
         <element name="feConvolveMatrix">
            <ref name="svg_attlist.feConvolveMatrix"/>
            <ref name="svg_SVG.feConvolveMatrix.content"/>
         </element>
      </define>
      <define name="svg_attlist.feConvolveMatrix" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <attribute name="order">
            <ref name="svg_NumberOptionalNumber.datatype"/>
         </attribute>
         <attribute name="kernelMatrix"/>
         <optional>
            <attribute name="divisor">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="bias">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="targetX">
               <ref name="svg_Integer.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="targetY">
               <ref name="svg_Integer.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="edgeMode"
                       a:defaultValue="duplicate">
               <choice>
                  <value>duplicate</value>
                  <value>wrap</value>
                  <value>none</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="kernelUnitLength">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="preserveAlpha">
               <ref name="svg_Boolean.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feDiffuseLighting.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feDiffuseLighting.content">
         <choice>
            <ref name="svg_feDistantLight"/>
            <ref name="svg_fePointLight"/>
            <ref name="svg_feSpotLight"/>
         </choice>
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.feDiffuseLighting.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feDiffuseLighting">
         <element name="feDiffuseLighting">
            <ref name="svg_attlist.feDiffuseLighting"/>
            <ref name="svg_SVG.feDiffuseLighting.content"/>
         </element>
      </define>
      <define name="svg_attlist.feDiffuseLighting" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute name="lighting-color">
               <ref name="svg_SVGColor.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="surfaceScale">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="diffuseConstant">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="kernelUnitLength">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feDisplacementMap.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feDisplacementMap.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feDisplacementMap.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feDisplacementMap">
         <element name="feDisplacementMap">
            <ref name="svg_attlist.feDisplacementMap"/>
            <ref name="svg_SVG.feDisplacementMap.content"/>
         </element>
      </define>
      <define name="svg_attlist.feDisplacementMap" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <attribute name="in2"/>
         <optional>
            <attribute name="scale">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="xChannelSelector"
                       a:defaultValue="A">
               <choice>
                  <value>R</value>
                  <value>G</value>
                  <value>B</value>
                  <value>A</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="yChannelSelector"
                       a:defaultValue="A">
               <choice>
                  <value>R</value>
                  <value>G</value>
                  <value>B</value>
                  <value>A</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feFlood.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feFlood.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.feFlood.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feFlood">
         <element name="feFlood">
            <ref name="svg_attlist.feFlood"/>
            <ref name="svg_SVG.feFlood.content"/>
         </element>
      </define>
      <define name="svg_attlist.feFlood" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute name="flood-color">
               <ref name="svg_SVGColor.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="flood-opacity">
               <ref name="svg_OpacityValue.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feGaussianBlur.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feGaussianBlur.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feGaussianBlur.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feGaussianBlur">
         <element name="feGaussianBlur">
            <ref name="svg_attlist.feGaussianBlur"/>
            <ref name="svg_SVG.feGaussianBlur.content"/>
         </element>
      </define>
      <define name="svg_attlist.feGaussianBlur" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute name="stdDeviation">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feImage.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feImage.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateTransform"/>
               <ref name="svg_SVG.feImage.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feImage">
         <element name="feImage">
            <ref name="svg_attlist.feImage"/>
            <ref name="svg_SVG.feImage.content"/>
         </element>
      </define>
      <define name="svg_attlist.feImage" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.FilterPrimitive.attrib"/>
         <ref name="svg_SVG.XLinkEmbed.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feMerge.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feMerge.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_feMergeNode"/>
               <ref name="svg_SVG.feMerge.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feMerge">
         <element name="feMerge">
            <ref name="svg_attlist.feMerge"/>
            <ref name="svg_SVG.feMerge.content"/>
         </element>
      </define>
      <define name="svg_attlist.feMerge" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitive.attrib"/>
      </define>
      <define name="svg_SVG.feMergeNode.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feMergeNode.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feMergeNode.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feMergeNode">
         <element name="feMergeNode">
            <ref name="svg_attlist.feMergeNode"/>
            <ref name="svg_SVG.feMergeNode.content"/>
         </element>
      </define>
      <define name="svg_attlist.feMergeNode" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="in"/>
         </optional>
      </define>
      <define name="svg_SVG.feMorphology.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feMorphology.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feMorphology.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feMorphology">
         <element name="feMorphology">
            <ref name="svg_attlist.feMorphology"/>
            <ref name="svg_SVG.feMorphology.content"/>
         </element>
      </define>
      <define name="svg_attlist.feMorphology" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="operator"
                       a:defaultValue="erode">
               <choice>
                  <value>erode</value>
                  <value>dilate</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="radius">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feOffset.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feOffset.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feOffset.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feOffset">
         <element name="feOffset">
            <ref name="svg_attlist.feOffset"/>
            <ref name="svg_SVG.feOffset.content"/>
         </element>
      </define>
      <define name="svg_attlist.feOffset" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute name="dx">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="dy">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feSpecularLighting.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feSpecularLighting.content">
         <choice>
            <ref name="svg_feDistantLight"/>
            <ref name="svg_fePointLight"/>
            <ref name="svg_feSpotLight"/>
         </choice>
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_animateColor"/>
               <ref name="svg_SVG.feSpecularLighting.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feSpecularLighting">
         <element name="feSpecularLighting">
            <ref name="svg_attlist.feSpecularLighting"/>
            <ref name="svg_SVG.feSpecularLighting.content"/>
         </element>
      </define>
      <define name="svg_attlist.feSpecularLighting" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Color.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
         <optional>
            <attribute name="lighting-color">
               <ref name="svg_SVGColor.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="surfaceScale">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="specularConstant">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="specularExponent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="kernelUnitLength">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feTile.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feTile.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feTile.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feTile">
         <element name="feTile">
            <ref name="svg_attlist.feTile"/>
            <ref name="svg_SVG.feTile.content"/>
         </element>
      </define>
      <define name="svg_attlist.feTile" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitiveWithIn.attrib"/>
      </define>
      <define name="svg_SVG.feTurbulence.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feTurbulence.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feTurbulence.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feTurbulence">
         <element name="feTurbulence">
            <ref name="svg_attlist.feTurbulence"/>
            <ref name="svg_SVG.feTurbulence.content"/>
         </element>
      </define>
      <define name="svg_attlist.feTurbulence" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.FilterColor.attrib"/>
         <ref name="svg_SVG.FilterPrimitive.attrib"/>
         <optional>
            <attribute name="baseFrequency">
               <ref name="svg_NumberOptionalNumber.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="numOctaves">
               <ref name="svg_Integer.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="seed">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="stitchTiles"
                       a:defaultValue="noStitch">
               <choice>
                  <value>stitch</value>
                  <value>noStitch</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="type"
                       a:defaultValue="turbulence">
               <choice>
                  <value>fractalNoise</value>
                  <value>turbulence</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feDistantLight.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feDistantLight.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feDistantLight.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feDistantLight">
         <element name="feDistantLight">
            <ref name="svg_attlist.feDistantLight"/>
            <ref name="svg_SVG.feDistantLight.content"/>
         </element>
      </define>
      <define name="svg_attlist.feDistantLight" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="azimuth">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="elevation">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.fePointLight.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.fePointLight.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.fePointLight.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_fePointLight">
         <element name="fePointLight">
            <ref name="svg_attlist.fePointLight"/>
            <ref name="svg_SVG.fePointLight.content"/>
         </element>
      </define>
      <define name="svg_attlist.fePointLight" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="z">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feSpotLight.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feSpotLight.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feSpotLight.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feSpotLight">
         <element name="feSpotLight">
            <ref name="svg_attlist.feSpotLight"/>
            <ref name="svg_SVG.feSpotLight.content"/>
         </element>
      </define>
      <define name="svg_attlist.feSpotLight" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="z">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="pointsAtX">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="pointsAtY">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="pointsAtZ">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="specularExponent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="limitingConeAngle">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feFuncR.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feFuncR.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feFuncR.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feFuncR">
         <element name="feFuncR">
            <ref name="svg_attlist.feFuncR"/>
            <ref name="svg_SVG.feFuncR.content"/>
         </element>
      </define>
      <define name="svg_attlist.feFuncR" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <attribute name="type">
            <choice>
               <value>identity</value>
               <value>table</value>
               <value>discrete</value>
               <value>linear</value>
               <value>gamma</value>
            </choice>
         </attribute>
         <optional>
            <attribute name="tableValues"/>
         </optional>
         <optional>
            <attribute name="slope">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="intercept">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="amplitude">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="exponent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="offset">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feFuncG.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feFuncG.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feFuncG.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feFuncG">
         <element name="feFuncG">
            <ref name="svg_attlist.feFuncG"/>
            <ref name="svg_SVG.feFuncG.content"/>
         </element>
      </define>
      <define name="svg_attlist.feFuncG" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <attribute name="type">
            <choice>
               <value>identity</value>
               <value>table</value>
               <value>discrete</value>
               <value>linear</value>
               <value>gamma</value>
            </choice>
         </attribute>
         <optional>
            <attribute name="tableValues"/>
         </optional>
         <optional>
            <attribute name="slope">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="intercept">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="amplitude">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="exponent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="offset">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feFuncB.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feFuncB.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feFuncB.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feFuncB">
         <element name="feFuncB">
            <ref name="svg_attlist.feFuncB"/>
            <ref name="svg_SVG.feFuncB.content"/>
         </element>
      </define>
      <define name="svg_attlist.feFuncB" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <attribute name="type">
            <choice>
               <value>identity</value>
               <value>table</value>
               <value>discrete</value>
               <value>linear</value>
               <value>gamma</value>
            </choice>
         </attribute>
         <optional>
            <attribute name="tableValues"/>
         </optional>
         <optional>
            <attribute name="slope">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="intercept">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="amplitude">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="exponent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="offset">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.feFuncA.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.feFuncA.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_animate"/>
               <ref name="svg_set"/>
               <ref name="svg_SVG.feFuncA.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_feFuncA">
         <element name="feFuncA">
            <ref name="svg_attlist.feFuncA"/>
            <ref name="svg_SVG.feFuncA.content"/>
         </element>
      </define>
      <define name="svg_attlist.feFuncA" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <attribute name="type">
            <choice>
               <value>identity</value>
               <value>table</value>
               <value>discrete</value>
               <value>linear</value>
               <value>gamma</value>
            </choice>
         </attribute>
         <optional>
            <attribute name="tableValues"/>
         </optional>
         <optional>
            <attribute name="slope">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="intercept">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="amplitude">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="exponent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="offset">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.cursor.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.cursor.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.cursor.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_cursor">
         <element name="cursor">
            <ref name="svg_attlist.cursor"/>
            <ref name="svg_SVG.cursor.content"/>
         </element>
      </define>
      <define name="svg_attlist.cursor" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.XLinkRequired.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_LinkTarget.datatype">
         <data type="NMTOKEN"/>
      </define>
      <define name="svg_SVG.a.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.a.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.a.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_a">
         <element name="a">
            <ref name="svg_attlist.a"/>
            <ref name="svg_SVG.a.content"/>
         </element>
      </define>
      <define name="svg_attlist.a" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.XLinkReplace.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="target">
               <ref name="svg_LinkTarget.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.view.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.view.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.view.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_view">
         <element name="view">
            <ref name="svg_attlist.view"/>
            <ref name="svg_SVG.view.content"/>
         </element>
      </define>
      <define name="svg_attlist.view" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="viewBox">
               <ref name="svg_ViewBoxSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="preserveAspectRatio"
                       a:defaultValue="xMidYMid meet">
               <ref name="svg_PreserveAspectRatioSpec.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="zoomAndPan"
                       a:defaultValue="magnify">
               <choice>
                  <value>disable</value>
                  <value>magnify</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="viewTarget"/>
         </optional>
      </define>
      <define name="svg_SVG.script.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.script.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.script.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_script">
         <element name="script">
            <ref name="svg_attlist.script"/>
            <ref name="svg_SVG.script.content"/>
         </element>
      </define>
      <define name="svg_attlist.script" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <attribute name="type">
            <ref name="svg_ContentType.datatype"/>
         </attribute>
      </define>
      <define name="svg_SVG.Animation.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.Animation.attrib">
         <ref name="svg_SVG.XLink.attrib"/>
         <ref name="svg_SVG.Animation.extra.attrib"/>
      </define>
      <define name="svg_SVG.AnimationAttribute.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.AnimationAttribute.attrib">
         <attribute name="attributeName"/>
         <optional>
            <attribute name="attributeType"/>
         </optional>
         <ref name="svg_SVG.AnimationAttribute.extra.attrib"/>
      </define>
      <define name="svg_SVG.AnimationTiming.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.AnimationTiming.attrib">
         <optional>
            <attribute name="begin"/>
         </optional>
         <optional>
            <attribute name="dur"/>
         </optional>
         <optional>
            <attribute name="end"/>
         </optional>
         <optional>
            <attribute name="min"/>
         </optional>
         <optional>
            <attribute name="max"/>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="restart"
                       a:defaultValue="always">
               <choice>
                  <value>always</value>
                  <value>never</value>
                  <value>whenNotActive</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="repeatCount"/>
         </optional>
         <optional>
            <attribute name="repeatDur"/>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="fill"
                       a:defaultValue="remove">
               <choice>
                  <value>remove</value>
                  <value>freeze</value>
               </choice>
            </attribute>
         </optional>
         <ref name="svg_SVG.AnimationTiming.extra.attrib"/>
      </define>
      <define name="svg_SVG.AnimationValue.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.AnimationValue.attrib">
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="calcMode"
                       a:defaultValue="linear">
               <choice>
                  <value>discrete</value>
                  <value>linear</value>
                  <value>paced</value>
                  <value>spline</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="values"/>
         </optional>
         <optional>
            <attribute name="keyTimes"/>
         </optional>
         <optional>
            <attribute name="keySplines"/>
         </optional>
         <optional>
            <attribute name="from"/>
         </optional>
         <optional>
            <attribute name="to"/>
         </optional>
         <optional>
            <attribute name="by"/>
         </optional>
         <ref name="svg_SVG.AnimationValue.extra.attrib"/>
      </define>
      <define name="svg_SVG.AnimationAddtion.extra.attrib">
         <empty/>
      </define>
      <define name="svg_SVG.AnimationAddtion.attrib">
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="additive"
                       a:defaultValue="replace">
               <choice>
                  <value>replace</value>
                  <value>sum</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="accumulate"
                       a:defaultValue="none">
               <choice>
                  <value>none</value>
                  <value>sum</value>
               </choice>
            </attribute>
         </optional>
         <ref name="svg_SVG.AnimationAddtion.extra.attrib"/>
      </define>
      <define name="svg_SVG.animate.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.animate.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.animate.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_animate">
         <element name="animate">
            <ref name="svg_attlist.animate"/>
            <ref name="svg_SVG.animate.content"/>
         </element>
      </define>
      <define name="svg_attlist.animate" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.AnimationEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <ref name="svg_SVG.Animation.attrib"/>
         <ref name="svg_SVG.AnimationAttribute.attrib"/>
         <ref name="svg_SVG.AnimationTiming.attrib"/>
         <ref name="svg_SVG.AnimationValue.attrib"/>
         <ref name="svg_SVG.AnimationAddtion.attrib"/>
      </define>
      <define name="svg_SVG.set.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.set.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.set.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_set">
         <element name="set">
            <ref name="svg_attlist.set"/>
            <ref name="svg_SVG.set.content"/>
         </element>
      </define>
      <define name="svg_attlist.set" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.AnimationEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <ref name="svg_SVG.Animation.attrib"/>
         <ref name="svg_SVG.AnimationAttribute.attrib"/>
         <ref name="svg_SVG.AnimationTiming.attrib"/>
         <optional>
            <attribute name="to"/>
         </optional>
      </define>
      <define name="svg_SVG.animateMotion.extra.content">
         <empty/>
      </define>
      <define name="svg_SVG.animateMotion.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <optional>
            <ref name="svg_mpath"/>
         </optional>
         <ref name="svg_SVG.animateMotion.extra.content"/>
      </define>
      <define name="svg_animateMotion">
         <element name="animateMotion">
            <ref name="svg_attlist.animateMotion"/>
            <ref name="svg_SVG.animateMotion.content"/>
         </element>
      </define>
      <define name="svg_attlist.animateMotion" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.AnimationEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <ref name="svg_SVG.Animation.attrib"/>
         <ref name="svg_SVG.AnimationTiming.attrib"/>
         <ref name="svg_SVG.AnimationAddtion.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="calcMode"
                       a:defaultValue="paced">
               <choice>
                  <value>discrete</value>
                  <value>linear</value>
                  <value>paced</value>
                  <value>spline</value>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="values"/>
         </optional>
         <optional>
            <attribute name="keyTimes"/>
         </optional>
         <optional>
            <attribute name="keySplines"/>
         </optional>
         <optional>
            <attribute name="from"/>
         </optional>
         <optional>
            <attribute name="to"/>
         </optional>
         <optional>
            <attribute name="by"/>
         </optional>
         <optional>
            <attribute name="path"/>
         </optional>
         <optional>
            <attribute name="keyPoints"/>
         </optional>
         <optional>
            <attribute name="rotate"/>
         </optional>
         <optional>
            <attribute name="origin"/>
         </optional>
      </define>
      <define name="svg_SVG.animateColor.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.animateColor.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.animateColor.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_animateColor">
         <element name="animateColor">
            <ref name="svg_attlist.animateColor"/>
            <ref name="svg_SVG.animateColor.content"/>
         </element>
      </define>
      <define name="svg_attlist.animateColor" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.AnimationEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <ref name="svg_SVG.Animation.attrib"/>
         <ref name="svg_SVG.AnimationAttribute.attrib"/>
         <ref name="svg_SVG.AnimationTiming.attrib"/>
         <ref name="svg_SVG.AnimationValue.attrib"/>
         <ref name="svg_SVG.AnimationAddtion.attrib"/>
      </define>
      <define name="svg_SVG.animateTransform.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.animateTransform.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.animateTransform.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_animateTransform">
         <element name="animateTransform">
            <ref name="svg_attlist.animateTransform"/>
            <ref name="svg_SVG.animateTransform.content"/>
         </element>
      </define>
      <define name="svg_attlist.animateTransform" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.AnimationEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <ref name="svg_SVG.Animation.attrib"/>
         <ref name="svg_SVG.AnimationAttribute.attrib"/>
         <ref name="svg_SVG.AnimationTiming.attrib"/>
         <ref name="svg_SVG.AnimationValue.attrib"/>
         <ref name="svg_SVG.AnimationAddtion.attrib"/>
         <optional>
            <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                       name="type"
                       a:defaultValue="translate">
               <choice>
                  <value>translate</value>
                  <value>scale</value>
                  <value>rotate</value>
                  <value>skewX</value>
                  <value>skewY</value>
               </choice>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.mpath.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.mpath.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.mpath.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_mpath">
         <element name="mpath">
            <ref name="svg_attlist.mpath"/>
            <ref name="svg_SVG.mpath.content"/>
         </element>
      </define>
      <define name="svg_attlist.mpath" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.XLinkRequired.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
      </define>
      <define name="svg_SVG.font.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.font.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <ref name="svg_font-face"/>
         <ref name="svg_missing-glyph"/>
         <zeroOrMore>
            <choice>
               <ref name="svg_glyph"/>
               <ref name="svg_hkern"/>
               <ref name="svg_vkern"/>
               <ref name="svg_SVG.font.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_font">
         <element name="font">
            <ref name="svg_attlist.font"/>
            <ref name="svg_SVG.font.content"/>
         </element>
      </define>
      <define name="svg_attlist.font" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="horiz-origin-x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="horiz-origin-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <attribute name="horiz-adv-x">
            <ref name="svg_Number.datatype"/>
         </attribute>
         <optional>
            <attribute name="vert-origin-x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-origin-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-adv-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.font-face.extra.content">
         <empty/>
      </define>
      <define name="svg_SVG.font-face.content">
         <zeroOrMore>
            <ref name="svg_SVG.Description.class"/>
         </zeroOrMore>
         <optional>
            <ref name="svg_font-face-src"/>
         </optional>
         <optional>
            <ref name="svg_definition-src"/>
         </optional>
         <ref name="svg_SVG.font-face.extra.content"/>
      </define>
      <define name="svg_font-face">
         <element name="font-face">
            <ref name="svg_attlist.font-face"/>
            <ref name="svg_SVG.font-face.content"/>
         </element>
      </define>
      <define name="svg_attlist.font-face" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="font-family"/>
         </optional>
         <optional>
            <attribute name="font-style"/>
         </optional>
         <optional>
            <attribute name="font-variant"/>
         </optional>
         <optional>
            <attribute name="font-weight"/>
         </optional>
         <optional>
            <attribute name="font-stretch"/>
         </optional>
         <optional>
            <attribute name="font-size"/>
         </optional>
         <optional>
            <attribute name="unicode-range"/>
         </optional>
         <optional>
            <attribute name="units-per-em">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="panose-1"/>
         </optional>
         <optional>
            <attribute name="stemv">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="stemh">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="slope">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="cap-height">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="x-height">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="accent-height">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="ascent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="descent">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="widths"/>
         </optional>
         <optional>
            <attribute name="bbox"/>
         </optional>
         <optional>
            <attribute name="ideographic">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="alphabetic">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="mathematical">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="hanging">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="v-ideographic">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="v-alphabetic">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="v-mathematical">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="v-hanging">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="underline-position">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="underline-thickness">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="strikethrough-position">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="strikethrough-thickness">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="overline-position">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="overline-thickness">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.glyph.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.glyph.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.glyph.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_glyph">
         <element name="glyph">
            <ref name="svg_attlist.glyph"/>
            <ref name="svg_SVG.glyph.content"/>
         </element>
      </define>
      <define name="svg_attlist.glyph" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <optional>
            <attribute name="unicode"/>
         </optional>
         <optional>
            <attribute name="glyph-name"/>
         </optional>
         <optional>
            <attribute name="d">
               <ref name="svg_PathData.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="orientation"/>
         </optional>
         <optional>
            <attribute name="arabic-form"/>
         </optional>
         <optional>
            <attribute name="lang">
               <ref name="svg_LanguageCodes.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="horiz-adv-x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-origin-x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-origin-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-adv-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.missing-glyph.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.missing-glyph.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_SVG.Description.class"/>
               <ref name="svg_SVG.Animation.class"/>
               <ref name="svg_SVG.Structure.class"/>
               <ref name="svg_SVG.Conditional.class"/>
               <ref name="svg_SVG.Image.class"/>
               <ref name="svg_SVG.Style.class"/>
               <ref name="svg_SVG.Shape.class"/>
               <ref name="svg_SVG.Text.class"/>
               <ref name="svg_SVG.Marker.class"/>
               <ref name="svg_SVG.ColorProfile.class"/>
               <ref name="svg_SVG.Gradient.class"/>
               <ref name="svg_SVG.Pattern.class"/>
               <ref name="svg_SVG.Clip.class"/>
               <ref name="svg_SVG.Mask.class"/>
               <ref name="svg_SVG.Filter.class"/>
               <ref name="svg_SVG.Cursor.class"/>
               <ref name="svg_SVG.Hyperlink.class"/>
               <ref name="svg_SVG.View.class"/>
               <ref name="svg_SVG.Script.class"/>
               <ref name="svg_SVG.Font.class"/>
               <ref name="svg_SVG.missing-glyph.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_missing-glyph">
         <element name="missing-glyph">
            <ref name="svg_attlist.missing-glyph"/>
            <ref name="svg_SVG.missing-glyph.content"/>
         </element>
      </define>
      <define name="svg_attlist.missing-glyph" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <optional>
            <attribute name="d">
               <ref name="svg_PathData.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="horiz-adv-x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-origin-x">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-origin-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="vert-adv-y">
               <ref name="svg_Number.datatype"/>
            </attribute>
         </optional>
      </define>
      <define name="svg_SVG.hkern.content">
         <empty/>
      </define>
      <define name="svg_hkern">
         <element name="hkern">
            <ref name="svg_attlist.hkern"/>
            <ref name="svg_SVG.hkern.content"/>
         </element>
      </define>
      <define name="svg_attlist.hkern" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="u1"/>
         </optional>
         <optional>
            <attribute name="g1"/>
         </optional>
         <optional>
            <attribute name="u2"/>
         </optional>
         <optional>
            <attribute name="g2"/>
         </optional>
         <attribute name="k">
            <ref name="svg_Number.datatype"/>
         </attribute>
      </define>
      <define name="svg_SVG.vkern.content">
         <empty/>
      </define>
      <define name="svg_vkern">
         <element name="vkern">
            <ref name="svg_attlist.vkern"/>
            <ref name="svg_SVG.vkern.content"/>
         </element>
      </define>
      <define name="svg_attlist.vkern" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="u1"/>
         </optional>
         <optional>
            <attribute name="g1"/>
         </optional>
         <optional>
            <attribute name="u2"/>
         </optional>
         <optional>
            <attribute name="g2"/>
         </optional>
         <attribute name="k">
            <ref name="svg_Number.datatype"/>
         </attribute>
      </define>
      <define name="svg_SVG.font-face-src.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.font-face-src.content">
         <oneOrMore>
            <choice>
               <ref name="svg_font-face-uri"/>
               <ref name="svg_font-face-name"/>
               <ref name="svg_SVG.font-face-src.extra.content"/>
            </choice>
         </oneOrMore>
      </define>
      <define name="svg_font-face-src">
         <element name="font-face-src">
            <ref name="svg_attlist.font-face-src"/>
            <ref name="svg_SVG.font-face-src.content"/>
         </element>
      </define>
      <define name="svg_attlist.font-face-src" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
      </define>
      <define name="svg_SVG.font-face-uri.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.font-face-uri.content">
         <zeroOrMore>
            <choice>
               <ref name="svg_font-face-format"/>
               <ref name="svg_SVG.font-face-uri.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_font-face-uri">
         <element name="font-face-uri">
            <ref name="svg_attlist.font-face-uri"/>
            <ref name="svg_SVG.font-face-uri.content"/>
         </element>
      </define>
      <define name="svg_attlist.font-face-uri" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.XLinkRequired.attrib"/>
      </define>
      <define name="svg_SVG.font-face-format.content">
         <empty/>
      </define>
      <define name="svg_font-face-format">
         <element name="font-face-format">
            <ref name="svg_attlist.font-face-format"/>
            <ref name="svg_SVG.font-face-format.content"/>
         </element>
      </define>
      <define name="svg_attlist.font-face-format" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="string"/>
         </optional>
      </define>
      <define name="svg_SVG.font-face-name.content">
         <empty/>
      </define>
      <define name="svg_font-face-name">
         <element name="font-face-name">
            <ref name="svg_attlist.font-face-name"/>
            <ref name="svg_SVG.font-face-name.content"/>
         </element>
      </define>
      <define name="svg_attlist.font-face-name" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <optional>
            <attribute name="name"/>
         </optional>
      </define>
      <define name="svg_SVG.definition-src.content">
         <empty/>
      </define>
      <define name="svg_definition-src">
         <element name="definition-src">
            <ref name="svg_attlist.definition-src"/>
            <ref name="svg_SVG.definition-src.content"/>
         </element>
      </define>
      <define name="svg_attlist.definition-src" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.XLinkRequired.attrib"/>
      </define>
      <define name="svg_SVG.foreignObject.extra.content">
         <notAllowed/>
      </define>
      <define name="svg_SVG.foreignObject.content">
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="svg_SVG.foreignObject.extra.content"/>
            </choice>
         </zeroOrMore>
      </define>
      <define name="svg_foreignObject">
         <element name="foreignObject">
            <ref name="svg_attlist.foreignObject"/>
            <ref name="svg_SVG.foreignObject.content"/>
         </element>
      </define>
      <define name="svg_attlist.foreignObject" combine="interleave">
         <ref name="svg_SVG.Core.attrib"/>
         <ref name="svg_SVG.Conditional.attrib"/>
         <ref name="svg_SVG.Style.attrib"/>
         <ref name="svg_SVG.Presentation.attrib"/>
         <ref name="svg_SVG.GraphicalEvents.attrib"/>
         <ref name="svg_SVG.External.attrib"/>
         <optional>
            <attribute name="x">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <optional>
            <attribute name="y">
               <ref name="svg_Coordinate.datatype"/>
            </attribute>
         </optional>
         <attribute name="width">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <attribute name="height">
            <ref name="svg_Length.datatype"/>
         </attribute>
         <optional>
            <attribute name="transform">
               <ref name="svg_TransformList.datatype"/>
            </attribute>
         </optional>
      </define>
   </div>
   <define name="mei_data.CERTAINTY">
      <choice>
         <value>high</value>
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">High certainty.</a:documentation>
         <value>medium</value>
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Medium certainty.</a:documentation>
         <value>low</value>
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Low certainty.</a:documentation>
         <value>unknown</value>
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">An unknown level of certainty.</a:documentation>
      </choice>
   </define>
   <define name="mei_data.CONFIDENCE">
      <data type="decimal">
         <param name="minInclusive">0</param>
         <param name="maxInclusive">1</param>
      </data>
   </define>
   <define name="mei_data.ISODATE">
      <choice>
         <data type="date"/>
         <data type="gYear"/>
         <data type="gMonth"/>
         <data type="gDay"/>
         <data type="gYearMonth"/>
         <data type="gMonthDay"/>
         <data type="time"/>
         <data type="dateTime"/>
         <data type="token">
            <param name="pattern">[0-9.,DHMPRSTWYZ/:+\-]+</param>
         </data>
      </choice>
   </define>
   <define name="mei_data.URI">
      <data type="anyURI"/>
   </define>
   <define name="mei_data.WORD">
      <data type="token">
         <param name="pattern">(\p{L}|\p{N}|\p{P}|\p{S})*</param>
      </data>
   </define>
   <define name="mei_macro.titlePart">
      <zeroOrMore>
         <choice>
            <ref name="mei_model.addressLike"/>
            <ref name="mei_model.annotLike"/>
            <ref name="mei_model.biblLike"/>
            <ref name="mei_model.dateLike"/>
            <ref name="mei_model.editorialLike"/>
            <ref name="mei_model.identifierLike"/>
            <ref name="mei_model.lbLike"/>
            <ref name="mei_model.measurementLike"/>
            <ref name="mei_model.nameLike"/>
            <ref name="mei_model.pbLike"/>
            <ref name="mei_model.rendLike"/>
         </choice>
      </zeroOrMore>
   </define>
   <define name="mei_att.edit.attributes">
      <ref name="mei_att.source.attributes"/>
      <ref name="mei_att.evidence.attributes"/>
   </define>
   <define name="mei_att.trans.attributes">
      <ref name="mei_att.handIdent.attributes"/>
      <ref name="mei_att.metadataPointing.attributes"/>
      <ref name="mei_att.sequence.attributes"/>
   </define>
   <define name="mei_model.editLike">
      <notAllowed/>
   </define>
   <define name="mei_model.editTransPart">
      <choice>
         <ref name="mei_model.editTransPart.music"/>
         <ref name="mei_model.editTransPart.text"/>
         <ref name="mei_model.sylLike"/>
      </choice>
   </define>
   <define name="mei_model.editTransPart.music">
      <choice>
         <ref name="mei_model.controlEventLike"/>
         <ref name="mei_model.layerLike"/>
      </choice>
   </define>
   <define name="mei_model.editTransPart.text">
      <choice>
         <ref name="mei_model.textComponentLike"/>
         <ref name="mei_model.textPhraseLike.limited"/>
      </choice>
   </define>
   <define name="mei_model.transcriptionLike">
      <notAllowed/>
   </define>
   <define name="mei_abbr">
      <element name="abbr" ns="http://www.music-encoding.org/ns/mei">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(abbreviation) – A generic element for 1) a shortened form of a word, including an acronym or 2) a shorthand notation.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.editLike"/>
               <ref name="mei_model.editTransPart"/>
               <ref name="mei_model.layerPart"/>
               <ref name="mei_model.milestoneLike.music"/>
               <ref name="mei_model.sectionPart"/>
               <ref name="mei_model.staffGrpLike"/>
               <ref name="mei_model.transcriptionLike"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.edit.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <ref name="mei_att.trans.attributes"/>
         <optional>
            <attribute name="expan">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Records the expansion of a text abbreviation.</a:documentation>
               <data type="string"/>
            </attribute>
         </optional>
         <empty/>
      </element>
   </define>
   <define name="mei_att.recordType.attributes">
      <ref name="mei_att.recordType.attribute.recordtype"/>
   </define>
   <define name="mei_att.recordType.attribute.recordtype">
      <optional>
         <attribute name="recordtype">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"/>
            <choice>
               <value>a</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Language material.</a:documentation>
               <value>c</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Notated music.</a:documentation>
               <value>d</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Manuscript notated music.</a:documentation>
               <value>e</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Non-manuscript cartographic material.</a:documentation>
               <value>f</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Manuscript cartographic material.</a:documentation>
               <value>g</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Projected medium.</a:documentation>
               <value>i</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Nonmusical sound recording.</a:documentation>
               <value>j</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Musical sound recording.</a:documentation>
               <value>k</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Two-dimensional nonprojectable graphic.</a:documentation>
               <value>m</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Computer file.</a:documentation>
               <value>o</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Kit.</a:documentation>
               <value>p</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Mixed materials.</a:documentation>
               <value>r</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Three-dimensional artifact or naturally occurring object.</a:documentation>
               <value>t</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Manuscript language material. </a:documentation>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_model.pubStmtPart">
      <choice>
         <ref name="mei_model.addressLike"/>
         <ref name="mei_model.dateLike"/>
         <ref name="mei_model.identifierLike"/>
         <ref name="mei_publisher"/>
         <ref name="mei_pubPlace"/>
      </choice>
   </define>
   <define name="mei_fileDesc">
      <element name="fileDesc">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(file description) – Contains a full bibliographic description of the MEI file.</a:documentation>
         <ref name="mei_titleStmt"/>
         <optional>
            <ref name="mei_extent"/>
         </optional>
         <ref name="mei_pubStmt"/>
         <optional>
            <ref name="mei_sourceDesc"/>
         </optional>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_meiHead">
      <element name="meiHead">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(MEI header) – Supplies the descriptive and declarative metadata prefixed to every MEI-conformant text.</a:documentation>
         <ref name="mei_fileDesc"/>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="mei-meiHead-check_meiHead_type-constraint-rule-4">
            <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      context="mei:meiHead[@type eq 'music']">
               <sch:assert test="ancestor::mei:mei">The meiHead type attribute can have the value 'music'
            only when the document element is "mei".</sch:assert>
            </sch:rule>
         </pattern>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="mei-meiHead-check_meiHead_type-constraint-rule-5">
            <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      context="mei:meiHead[@type eq 'corpus']">
               <sch:assert test="ancestor::mei:meiCorpus">The meiHead type attribute can have the value
            'corpus' only when the document element is "meiCorpus".</sch:assert>
            </sch:rule>
         </pattern>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="mei-meiHead-check_meiHead_type-constraint-rule-6">
            <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      context="mei:meiHead[@type eq 'independent']">
               <sch:assert test="not(ancestor::mei:*)">The meiHead type attribute can have the value
            'independent' only when the document element is "meiHead".</sch:assert>
            </sch:rule>
         </pattern>
         <ref name="mei_att.basic.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.labelled.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <ref name="mei_att.meiVersion.attributes"/>
         <ref name="mei_att.responsibility.attributes"/>
         <optional>
            <attribute name="type">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.</a:documentation>
               <choice>
                  <value>music</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Header is attached to a music document.</a:documentation>
                  <value>corpus</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Header is attached to a corpus.</a:documentation>
                  <value>independent</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Header is independent; i.e., not attached to either a music or a corpus document.</a:documentation>
               </choice>
            </attribute>
         </optional>
         <empty/>
      </element>
   </define>
   <define name="mei_pubStmt">
      <element name="pubStmt">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(publication statement) – Container for information regarding the publication or distribution of a bibliographic item, including the publisher's name and address, the date of publication, and other relevant details.</a:documentation>
         <zeroOrMore>
            <ref name="mei_model.headLike"/>
         </zeroOrMore>
         <choice>
            <optional>
               <ref name="mei_unpub"/>
            </optional>
            <zeroOrMore>
               <ref name="mei_model.pubStmtPart"/>
            </zeroOrMore>
         </choice>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_source">
      <element name="source">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">A bibliographic description of a source used in the creation of the electronic file.</a:documentation>
         <zeroOrMore>
            <ref name="mei_model.headLike"/>
         </zeroOrMore>
         <zeroOrMore>
            <empty/>
         </zeroOrMore>
         <zeroOrMore>
            <ref name="mei_model.biblLike"/>
         </zeroOrMore>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="mei-source-check_source_target-constraint-rule-7">
            <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      context="mei:source/@target">
               <sch:assert role="warning" test="not(normalize-space(.) eq '')">@target attribute should
            have content.</sch:assert>
               <sch:assert role="warning"
                           test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[local-name()              eq 'source' or local-name() eq 'manifestation']/@xml:id or matches($i, '^([a-z]+://|\.{1,2}/)')">Each value in @target should correspond to the @xml:id attribute of a source or
            manifestation element or be an external URI.</sch:assert>
            </sch:rule>
         </pattern>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.authorized.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.dataPointing.attributes"/>
         <ref name="mei_att.pointing.attributes"/>
         <ref name="mei_att.recordType.attributes"/>
         <ref name="mei_att.targetEval.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_sourceDesc">
      <element name="sourceDesc">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(source description) – A container for the descriptions of the source(s) used in the creation of the electronic file.</a:documentation>
         <zeroOrMore>
            <ref name="mei_model.headLike"/>
         </zeroOrMore>
         <oneOrMore>
            <ref name="mei_source"/>
         </oneOrMore>
         <ref name="mei_att.common.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_titleStmt">
      <element name="titleStmt">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(title statement) – Container for title and responsibility meta-data.</a:documentation>
         <zeroOrMore>
            <ref name="mei_model.headLike"/>
         </zeroOrMore>
         <oneOrMore>
            <ref name="mei_model.titleLike"/>
         </oneOrMore>
         <zeroOrMore>
            <ref name="mei_model.respLike"/>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_unpub">
      <element name="unpub">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(unpublished) – Used to explicitly indicate that a bibliographic resource is unpublished.</a:documentation>
         <text/>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_att.authorized.attributes">
      <ref name="mei_att.canonical.attributes"/>
      <ref name="mei_att.authorized.attribute.auth"/>
      <ref name="mei_att.authorized.attribute.auth.uri"/>
   </define>
   <define name="mei_att.authorized.attribute.auth">
      <optional>
         <attribute name="auth">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">A name or label associated with a controlled vocabulary or other authoritative source for this element or its content.</a:documentation>
            <data type="string"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.authorized.attribute.auth.uri">
      <optional>
         <attribute name="auth.uri">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">A web-accessible location of the controlled vocabulary or other authoritative source of identification or definition for this element or its content. This attribute may contain a complete URI or a partial URI which is completed by the value of the codedval attribute.</a:documentation>
            <ref name="mei_data.URI"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.basic.attributes">
      <ref name="mei_att.id.attributes"/>
      <ref name="mei_att.basic.attribute.xmlbase"/>
   </define>
   <define name="mei_att.basic.attribute.xmlbase">
      <optional>
         <attribute name="xml:base">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Provides a base URI reference with which applications can resolve relative URI references into absolute URI references.</a:documentation>
            <ref name="mei_data.URI"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.bibl.attributes">
      <ref name="mei_att.bibl.attribute.analog"/>
   </define>
   <define name="mei_att.bibl.attribute.analog">
      <optional>
         <attribute name="analog">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains a reference to a field or element in another descriptive encoding system to which this MEI element is comparable.</a:documentation>
            <data type="string"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.calendared.attributes">
      <ref name="mei_att.calendared.attribute.calendar"/>
   </define>
   <define name="mei_att.calendared.attribute.calendar">
      <optional>
         <attribute name="calendar">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Indicates the calendar system to which a date belongs, for example, Gregorian, Julian, Roman, Mosaic, Revolutionary, Islamic, etc.</a:documentation>
            <data type="NMTOKEN"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.canonical.attributes">
      <ref name="mei_att.canonical.attribute.codedval"/>
   </define>
   <define name="mei_att.canonical.attribute.codedval">
      <optional>
         <attribute name="codedval">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">A value that represents or identifies other data. Often, it is a primary key in the database or a unique value in the coded list identified by the auth or auth.uri attributes.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="NMTOKEN"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.classed.attributes">
      <ref name="mei_att.classed.attribute.class"/>
   </define>
   <define name="mei_att.classed.attribute.class">
      <optional>
         <attribute name="class">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains one or more URIs which denote classification terms that apply to the entity bearing this attribute.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.classed-class-check_classURI-constraint-rule-8">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@class">
              <sch:assert test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:category/@xml:id or matches($i, '^([a-z]+://|\.{1,2}/)')">The value in @class must either correspond to the @xml:id attribute of a category
                element or be an external URL.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.common.attributes">
      <ref name="mei_att.basic.attributes"/>
      <ref name="mei_att.labelled.attributes"/>
      <ref name="mei_att.linking.attributes"/>
      <ref name="mei_att.nNumberLike.attributes"/>
      <ref name="mei_att.responsibility.attributes"/>
      <ref name="mei_att.typed.attributes"/>
   </define>
   <define name="mei_att.datable.attributes">
      <ref name="mei_att.datable.attribute.enddate"/>
      <ref name="mei_att.datable.attribute.isodate"/>
      <ref name="mei_att.datable.attribute.notafter"/>
      <ref name="mei_att.datable.attribute.notbefore"/>
      <ref name="mei_att.datable.attribute.startdate"/>
   </define>
   <define name="mei_att.datable.attribute.enddate">
      <optional>
         <attribute name="enddate">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains the end point of a date range in standard ISO form.</a:documentation>
            <ref name="mei_data.ISODATE"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.datable.attribute.isodate">
      <optional>
         <attribute name="isodate">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Provides the value of a textual date in standard ISO form.</a:documentation>
            <ref name="mei_data.ISODATE"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.datable.attribute.notafter">
      <optional>
         <attribute name="notafter">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains an upper boundary for an uncertain date in standard ISO form.</a:documentation>
            <ref name="mei_data.ISODATE"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.datable.attribute.notbefore">
      <optional>
         <attribute name="notbefore">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains a lower boundary, in standard ISO form, for an uncertain date.</a:documentation>
            <ref name="mei_data.ISODATE"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.datable.attribute.startdate">
      <optional>
         <attribute name="startdate">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains the starting point of a date range in standard ISO form.</a:documentation>
            <ref name="mei_data.ISODATE"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.dataPointing.attributes">
      <ref name="mei_att.dataPointing.attribute.data"/>
   </define>
   <define name="mei_att.dataPointing.attribute.data">
      <optional>
         <attribute name="data">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Used to link metadata elements to one or more data-containing elements.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.dataPointing-data-check_dataTarget-constraint-rule-9">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@data">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@data attribute should
                have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[ancestor::mei:music]/@xml:id">The value in @data should correspond to the @xml:id attribute of a descendant of
                the music element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.metadataPointing.attributes">
      <ref name="mei_att.metadataPointing.attribute.decls"/>
   </define>
   <define name="mei_att.metadataPointing.attribute.decls">
      <optional>
         <attribute name="decls">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Identifies one or more metadata elements (other than classification terms) within the header, which are understood to apply to the element bearing this attribute and its content.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.metadataPointing-decls-check_declsTarget-constraint-rule-10">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@decls">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@decls attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[ancestor::mei:meiHead]/@xml:id">Each value in @decls should correspond to the @xml:id attribute of an element
                within the metadata header.</sch:assert>
              <sch:assert test="every $i in tokenize(., '\s+') satisfies not(substring($i,2)=//mei:term/@xml:id)">No value in @decls should correspond to the @xml:id attribute of a classification
                term. Use @class for this purpose.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.evidence.attributes">
      <ref name="mei_att.evidence.attribute.cert"/>
      <ref name="mei_att.evidence.attribute.evidence"/>
   </define>
   <define name="mei_att.evidence.attribute.cert">
      <optional>
         <attribute name="cert">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Signifies the degree of certainty or precision associated with a feature.</a:documentation>
            <ref name="mei_data.CERTAINTY"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.evidence.attribute.evidence">
      <optional>
         <attribute name="evidence">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
Suggested values include: 1] internal; 2] external; 3] conjecture</a:documentation>
            <choice>
               <value>internal</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">There is evidence within the document to support the intervention.</a:documentation>
               <value>external</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">There is evidence outside the document to support the intervention.</a:documentation>
               <value>conjecture</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">The assertion has been made by the editor, cataloguer, or scholar on the basis of their expertise.</a:documentation>
               <data type="NMTOKEN"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.filing.attributes">
      <ref name="mei_att.filing.attribute.nonfiling"/>
   </define>
   <define name="mei_att.filing.attribute.nonfiling">
      <optional>
         <attribute name="nonfiling">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Holds the number of initial characters (such as those constituting an article or preposition) that should not be used for sorting a title or name.</a:documentation>
            <data type="positiveInteger"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.handIdent.attributes">
      <ref name="mei_att.handIdent.attribute.hand"/>
   </define>
   <define name="mei_att.handIdent.attribute.hand">
      <optional>
         <attribute name="hand">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Signifies the hand responsible for an action. The value must be the ID of a hand element declared in the header.</a:documentation>
            <ref name="mei_data.URI"/>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.handIdent-hand-check_handTarget-constraint-rule-11">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@hand">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@hand attribute should
                have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:hand/@xml:id">Each value in @hand should correspond to the @xml:id attribute of a hand
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.id.attributes">
      <ref name="mei_att.id.attribute.xmlid"/>
   </define>
   <define name="mei_att.id.attribute.xmlid">
      <optional>
         <attribute name="xml:id">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Regularizes the naming of an element and thus facilitates building links between it and other resources. Each id attribute within a document must have a unique value.</a:documentation>
            <data type="ID"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.labelled.attributes">
      <ref name="mei_att.labelled.attribute.label"/>
   </define>
   <define name="mei_att.labelled.attribute.label">
      <optional>
         <attribute name="label">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Captures text to be used to generate a label for the element to which it's attached, a "tool tip" or prefatory text, for example. Should not be used to record document content.</a:documentation>
            <data type="string"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.lang.attributes">
      <ref name="mei_att.lang.attribute.xmllang"/>
      <ref name="mei_att.lang.attribute.translit"/>
   </define>
   <define name="mei_att.lang.attribute.xmllang">
      <optional>
         <attribute name="xml:lang">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Identifies the language of the element's content. The values for this attribute are language 'tags' as defined in BCP 47. All language tags that make use of private use sub-tags must be documented in a corresponding language element in the MEI header whose id attribute is the same as the language tag's value.</a:documentation>
            <data type="language"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.lang.attribute.translit">
      <optional>
         <attribute name="translit">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Specifies the transliteration technique used.</a:documentation>
            <data type="NMTOKEN"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.linking.attributes">
      <ref name="mei_att.linking.attribute.copyof"/>
      <ref name="mei_att.linking.attribute.corresp"/>
      <ref name="mei_att.linking.attribute.follows"/>
      <ref name="mei_att.linking.attribute.next"/>
      <ref name="mei_att.linking.attribute.precedes"/>
      <ref name="mei_att.linking.attribute.prev"/>
      <ref name="mei_att.linking.attribute.sameas"/>
      <ref name="mei_att.linking.attribute.synch"/>
   </define>
   <define name="mei_att.linking.attribute.copyof">
      <optional>
         <attribute name="copyof">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Points to an element of which the current element is a copy.</a:documentation>
            <ref name="mei_data.URI"/>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-copyof-When_copyof_element_empty-constraint-rule-12">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="mei:*[@copyof]">
              <sch:assert test="count(child::*[not(comment() or processing-instruction())]) = 0">An
                element with a copyof attribute can only have comment or processing instruction
                descendents.</sch:assert>
            </sch:rule>
   </pattern>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-copyof-check_copyofTarget-constraint-rule-13">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@copyof">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@copyof attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">The
                value in @copyof should correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.corresp">
      <optional>
         <attribute name="corresp">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Used to point to other elements that correspond to this one in a generic fashion.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-corresp-check_correspTarget-constraint-rule-14">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@corresp">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@corresp attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @corresp should correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.follows">
      <optional>
         <attribute name="follows">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">points to one or more events in a user-defined collection that are known to be predecessors of the current element.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-follows-check_followsTarget-constraint-rule-15">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@follows">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@follows attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @follows must correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.next">
      <optional>
         <attribute name="next">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Used to point to the next event(s) in a user-defined collection.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-next-check_nextTarget-constraint-rule-16">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@next">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@next attribute should
                have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @next should correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.precedes">
      <optional>
         <attribute name="precedes">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Points to one or more events in a user-defined collection that are known to be successors of the current element.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-precedes-check_precedesTarget-constraint-rule-17">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@precedes">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@precedes attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @precedes must correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.prev">
      <optional>
         <attribute name="prev">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Points to the previous event(s) in a user-defined collection.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-prev-check_prevTarget-constraint-rule-18">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@prev">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@prev attribute should
                have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @prev should correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.sameas">
      <optional>
         <attribute name="sameas">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Points to an element that is the same as the current element but is not a literal copy of the current element.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-sameas-check_sameasTarget-constraint-rule-19">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@sameas">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@sameas attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @sameas should correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.linking.attribute.synch">
      <optional>
         <attribute name="synch">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Points to elements that are synchronous with the current element.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.linking-synch-check_synchTarget-constraint-rule-20">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@synch">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@synch attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @synch should correspond to the @xml:id attribute of an
                element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.measurement.attributes">
      <ref name="mei_att.measurement.attribute.unit"/>
   </define>
   <define name="mei_att.measurement.attribute.unit">
      <optional>
         <attribute name="unit">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Indicates the unit of measurement.
Suggested values include: 1] byte; 2] char; 3] cm; 4] deg; 5] in; 6] issue; 7] ft; 8] m; 9] mm; 10] page; 11] pc; 12] pt; 13] px; 14] rad; 15] record; 16] vol; 17] vu</a:documentation>
            <choice>
               <value>byte</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Byte.</a:documentation>
               <value>char</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Character.</a:documentation>
               <value>cm</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Centimeter.</a:documentation>
               <value>deg</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Degree.</a:documentation>
               <value>in</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Inch.</a:documentation>
               <value>issue</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Serial issue.</a:documentation>
               <value>ft</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Foot.</a:documentation>
               <value>m</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Meter.</a:documentation>
               <value>mm</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Millimeter.</a:documentation>
               <value>page</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Page.</a:documentation>
               <value>pc</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Pica.</a:documentation>
               <value>pt</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Point.</a:documentation>
               <value>px</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Pixel.</a:documentation>
               <value>rad</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Radian.</a:documentation>
               <value>record</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Record.</a:documentation>
               <value>vol</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Serial volume.</a:documentation>
               <value>vu</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">MEI virtual unit.</a:documentation>
               <data type="NMTOKEN"/>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.meiVersion.attributes">
      <ref name="mei_att.meiVersion.attribute.meiversion"/>
   </define>
   <define name="mei_att.meiVersion.attribute.meiversion">
      <optional>
         <attribute xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                    name="meiversion"
                    a:defaultValue="4.0.1">
            <a:documentation>Specifies a generic MEI version label.</a:documentation>
            <choice>
               <value>4.0.0</value>
               <a:documentation>First release of MEI 4</a:documentation>
               <value>4.0.1</value>
               <a:documentation>Bugfix Release 4.0.1</a:documentation>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.nNumberLike.attributes">
      <ref name="mei_att.nNumberLike.attribute.n"/>
   </define>
   <define name="mei_att.nNumberLike.attribute.n">
      <optional>
         <attribute name="n">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Provides a number-like designation that indicates an element's position in a sequence of similar elements. May not contain space characters.</a:documentation>
            <ref name="mei_data.WORD"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.pointing.attributes">
      <ref name="mei_att.pointing.attribute.xlinkactuate"/>
      <ref name="mei_att.pointing.attribute.xlinkrole"/>
      <ref name="mei_att.pointing.attribute.xlinkshow"/>
      <ref name="mei_att.pointing.attribute.target"/>
      <ref name="mei_att.pointing.attribute.targettype"/>
   </define>
   <define name="mei_att.pointing.attribute.xlinkactuate">
      <optional>
         <attribute name="xlink:actuate">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Defines whether a link occurs automatically or must be requested by the user.</a:documentation>
            <choice>
               <value>onLoad</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Load the target resource(s) immediately.</a:documentation>
               <value>onRequest</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Load the target resource(s) upon user request.</a:documentation>
               <value>none</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Do not permit loading of the target resource(s).</a:documentation>
               <value>other</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Behavior other than allowed by the other values of this attribute.</a:documentation>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.pointing.attribute.xlinkrole">
      <optional>
         <attribute name="xlink:role">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Characterization of the relationship between resources. The value of the role attribute must be a URI.</a:documentation>
            <ref name="mei_data.URI"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.pointing.attribute.xlinkshow">
      <optional>
         <attribute name="xlink:show">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Defines how a remote resource is rendered.</a:documentation>
            <choice>
               <value>new</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Open in a new window.</a:documentation>
               <value>replace</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Load the referenced resource in the same window.</a:documentation>
               <value>embed</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Embed the referenced resource at the point of the link.</a:documentation>
               <value>none</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Do not permit traversal to the referenced resource.</a:documentation>
               <value>other</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Behavior other than permitted by the other values of this attribute.</a:documentation>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.pointing.attribute.target">
      <optional>
         <attribute name="target">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Identifies passive participants in a relationship; that is, the entities pointed "to".</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.pointing.attribute.targettype">
      <optional>
         <attribute name="targettype">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Characterization of target resource(s) using any convenient classification scheme or typology.</a:documentation>
            <data type="NMTOKEN"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.quantity.attributes">
      <ref name="mei_att.measurement.attributes"/>
      <ref name="mei_att.ranging.attributes"/>
      <ref name="mei_att.quantity.attribute.quantity"/>
   </define>
   <define name="mei_att.quantity.attribute.quantity">
      <optional>
         <attribute name="quantity">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Numeric value capturing a measurement or count. Can only be interpreted in combination with the unit attribute.</a:documentation>
            <data type="decimal">
               <param name="minInclusive">0</param>
            </data>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.ranging.attributes">
      <ref name="mei_att.ranging.attribute.atleast"/>
      <ref name="mei_att.ranging.attribute.atmost"/>
      <ref name="mei_att.ranging.attribute.min"/>
      <ref name="mei_att.ranging.attribute.max"/>
      <ref name="mei_att.ranging.attribute.confidence"/>
   </define>
   <define name="mei_att.ranging.attribute.atleast">
      <optional>
         <attribute name="atleast">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Gives a minimum estimated value for an approximate measurement.</a:documentation>
            <data type="decimal"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.ranging.attribute.atmost">
      <optional>
         <attribute name="atmost">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Gives a maximum estimated value for an approximate measurement.</a:documentation>
            <data type="decimal"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.ranging.attribute.min">
      <optional>
         <attribute name="min">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Where the measurement summarizes more than one observation or a range of values, supplies the minimum value observed.</a:documentation>
            <data type="decimal"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.ranging.attribute.max">
      <optional>
         <attribute name="max">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Where the measurement summarizes more than one observation or a range of values, supplies the maximum value observed.</a:documentation>
            <data type="decimal"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.ranging.attribute.confidence">
      <optional>
         <attribute name="confidence">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.</a:documentation>
            <ref name="mei_data.CONFIDENCE"/>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.ranging-confidence-check_confidence-constraint-rule-21">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="mei:*[@confidence]">
              <sch:assert test="@min and @max">The attributes @min and @max are required when
                @confidence is present.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.responsibility.attributes">
      <ref name="mei_att.responsibility.attribute.resp"/>
   </define>
   <define name="mei_att.responsibility.attribute.resp">
      <optional>
         <attribute name="resp">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Indicates the agent(s) responsible for some aspect of the text's transcription, editing, or encoding. Its value must point to one or more identifiers declared in the document header.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.responsibility-resp-check_respTarget-constraint-rule-22">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@resp">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@resp attribute should
                have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[ancestor::mei:meiHead]/@xml:id">The value in @resp should correspond to the @xml:id attribute of an element within
                the metadata header.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.sequence.attributes">
      <ref name="mei_att.sequence.attribute.seq"/>
   </define>
   <define name="mei_att.sequence.attribute.seq">
      <optional>
         <attribute name="seq">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Used to assign a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.</a:documentation>
            <data type="positiveInteger"/>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.source.attributes">
      <ref name="mei_att.source.attribute.source"/>
   </define>
   <define name="mei_att.source.attribute.source">
      <optional>
         <attribute name="source">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains a list of one or more pointers indicating the sources which attest to a given reading. Each value should correspond to the ID of a source or manifestationelement located in the document header.</a:documentation>
            <list>
               <oneOrMore>
                  <ref name="mei_data.URI"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
            id="mei-att.source-source-check_sourceTarget-constraint-rule-23">
      <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="@source">
              <sch:assert role="warning" test="not(normalize-space(.) eq '')">@source attribute
                should have content.</sch:assert>
              <sch:assert role="warning"
                     test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[local-name() eq 'source' or local-name() eq 'manifestation']/@xml:id">Each value in @source should correspond to the @xml:id attribute of a source or
                manifestation element.</sch:assert>
            </sch:rule>
   </pattern>
   <define name="mei_att.targetEval.attributes">
      <ref name="mei_att.targetEval.attribute.evaluate"/>
   </define>
   <define name="mei_att.targetEval.attribute.evaluate">
      <optional>
         <attribute name="evaluate">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Specifies the intended meaning when a participant in a relationship is itself a pointer.</a:documentation>
            <choice>
               <value>all</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">If an element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.</a:documentation>
               <value>one</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">If an element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.</a:documentation>
               <value>none</value>
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">No further evaluation of targets is carried out beyond that needed to find the element(s) specified in plist or target attribute.</a:documentation>
            </choice>
         </attribute>
      </optional>
   </define>
   <define name="mei_att.typed.attributes">
      <ref name="mei_att.classed.attributes"/>
      <ref name="mei_att.typed.attribute.type"/>
   </define>
   <define name="mei_att.typed.attribute.type">
      <optional>
         <attribute name="type">
            <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Designation which characterizes the element in some sense, using any convenient classification scheme or typology that employs single-token labels.</a:documentation>
            <list>
               <oneOrMore>
                  <data type="NMTOKEN"/>
               </oneOrMore>
            </list>
         </attribute>
      </optional>
   </define>
   <define name="mei_model.addressLike">
      <notAllowed/>
   </define>
   <define name="mei_model.addressLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.addressLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.addressLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.addressLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.addressLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.annotLike">
      <notAllowed/>
   </define>
   <define name="mei_model.annotLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.annotLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.annotLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.annotLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.annotLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.biblLike">
      <choice>
         <ref name="mei_bibl"/>
         <ref name="mei_biblStruct"/>
      </choice>
   </define>
   <define name="mei_model.biblLike_alternation">
      <choice>
         <ref name="mei_bibl"/>
         <ref name="mei_biblStruct"/>
      </choice>
   </define>
   <define name="mei_model.biblLike_sequence">
      <ref name="mei_bibl"/>
      <ref name="mei_biblStruct"/>
   </define>
   <define name="mei_model.biblLike_sequenceOptional">
      <optional>
         <ref name="mei_bibl"/>
      </optional>
      <optional>
         <ref name="mei_biblStruct"/>
      </optional>
   </define>
   <define name="mei_model.biblLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_bibl"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_biblStruct"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.biblLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_bibl"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_biblStruct"/>
      </oneOrMore>
   </define>
   <define name="mei_model.biblPart">
      <choice>
         <ref name="mei_model.editionLike"/>
         <ref name="mei_model.respLike"/>
         <ref name="mei_imprint"/>
      </choice>
   </define>
   <define name="mei_model.controlEventLike">
      <notAllowed/>
   </define>
   <define name="mei_model.controlEventLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.controlEventLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.controlEventLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.controlEventLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.controlEventLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.dateLike">
      <choice>
         <ref name="mei_date"/>
      </choice>
   </define>
   <define name="mei_model.dateLike_alternation">
      <choice>
         <ref name="mei_date"/>
      </choice>
   </define>
   <define name="mei_model.dateLike_sequence">
      <ref name="mei_date"/>
   </define>
   <define name="mei_model.dateLike_sequenceOptional">
      <optional>
         <ref name="mei_date"/>
      </optional>
   </define>
   <define name="mei_model.dateLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_date"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.dateLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_date"/>
      </oneOrMore>
   </define>
   <define name="mei_model.dimLike">
      <notAllowed/>
   </define>
   <define name="mei_model.dimLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.dimLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.dimLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.dimLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.dimLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.editionLike">
      <notAllowed/>
   </define>
   <define name="mei_model.editorialLike">
      <choice>
         <ref name="mei_abbr"/>
      </choice>
   </define>
   <define name="mei_model.editorialLike_alternation">
      <choice>
         <ref name="mei_abbr"/>
      </choice>
   </define>
   <define name="mei_model.editorialLike_sequence">
      <ref name="mei_abbr"/>
   </define>
   <define name="mei_model.editorialLike_sequenceOptional">
      <optional>
         <ref name="mei_abbr"/>
      </optional>
   </define>
   <define name="mei_model.editorialLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_abbr"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.editorialLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_abbr"/>
      </oneOrMore>
   </define>
   <define name="mei_model.endingLike">
      <notAllowed/>
   </define>
   <define name="mei_model.eventLike">
      <choice>
         <ref name="mei_model.keySigLike"/>
         <ref name="mei_model.meterSigLike"/>
      </choice>
   </define>
   <define name="mei_model.headLike">
      <notAllowed/>
   </define>
   <define name="mei_model.identifierLike">
      <notAllowed/>
   </define>
   <define name="mei_model.identifierLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.identifierLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.identifierLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.identifierLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.identifierLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.imprintPart">
      <choice>
         <ref name="mei_publisher"/>
         <ref name="mei_pubPlace"/>
      </choice>
   </define>
   <define name="mei_model.keySigLike">
      <notAllowed/>
   </define>
   <define name="mei_model.keySigLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.keySigLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.keySigLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.keySigLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.keySigLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.layerLike">
      <notAllowed/>
   </define>
   <define name="mei_model.layerLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.layerLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.layerLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.layerLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.layerLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.layerPart">
      <choice>
         <ref name="mei_model.eventLike"/>
         <ref name="mei_model.layerPart.mensuralAndNeumes"/>
      </choice>
   </define>
   <define name="mei_model.layerPart.mensuralAndNeumes">
      <notAllowed/>
   </define>
   <define name="mei_model.lbLike">
      <notAllowed/>
   </define>
   <define name="mei_model.lbLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.lbLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.lbLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.lbLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.lbLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.measurementLike">
      <choice>
         <ref name="mei_model.numLike"/>
      </choice>
   </define>
   <define name="mei_model.measurementLike_alternation">
      <choice>
         <ref name="mei_model.numLike_alternation"/>
      </choice>
   </define>
   <define name="mei_model.measurementLike_sequence">
      <ref name="mei_model.numLike_sequence"/>
   </define>
   <define name="mei_model.measurementLike_sequenceOptional">
      <optional>
         <ref name="mei_model.numLike_sequenceOptional"/>
      </optional>
   </define>
   <define name="mei_model.measurementLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_model.numLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.measurementLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_model.numLike_sequenceRepeatable"/>
      </oneOrMore>
   </define>
   <define name="mei_model.meterSigLike">
      <notAllowed/>
   </define>
   <define name="mei_model.meterSigLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.meterSigLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.meterSigLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.meterSigLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.meterSigLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.milestoneLike.music">
      <choice>
         <ref name="mei_model.pbLike"/>
      </choice>
   </define>
   <define name="mei_model.nameLike">
      <notAllowed/>
   </define>
   <define name="mei_model.nameLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.nameLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.nameLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.nameLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.nameLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.numLike">
      <notAllowed/>
   </define>
   <define name="mei_model.numLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.numLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.numLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.numLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.numLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.pbLike">
      <notAllowed/>
   </define>
   <define name="mei_model.pLike">
      <notAllowed/>
   </define>
   <define name="mei_model.pLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.pLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.pLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.pLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.pLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.relationLike">
      <notAllowed/>
   </define>
   <define name="mei_model.relationLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.relationLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.relationLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.relationLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.relationLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.rendLike">
      <notAllowed/>
   </define>
   <define name="mei_model.rendLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.rendLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.rendLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.rendLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.rendLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.respLike">
      <choice>
         <ref name="mei_model.respLikePart"/>
      </choice>
   </define>
   <define name="mei_model.respLikePart">
      <choice>
         <ref name="mei_author"/>
         <ref name="mei_composer"/>
      </choice>
   </define>
   <define name="mei_model.respLikePart_alternation">
      <choice>
         <ref name="mei_author"/>
         <ref name="mei_composer"/>
      </choice>
   </define>
   <define name="mei_model.respLikePart_sequence">
      <ref name="mei_author"/>
      <ref name="mei_composer"/>
   </define>
   <define name="mei_model.respLikePart_sequenceOptional">
      <optional>
         <ref name="mei_author"/>
      </optional>
      <optional>
         <ref name="mei_composer"/>
      </optional>
   </define>
   <define name="mei_model.respLikePart_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_author"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_composer"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.respLikePart_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_author"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_composer"/>
      </oneOrMore>
   </define>
   <define name="mei_model.scoreDefLike">
      <notAllowed/>
   </define>
   <define name="mei_model.sectionLike">
      <notAllowed/>
   </define>
   <define name="mei_model.sectionPart">
      <choice>
         <ref name="mei_model.endingLike"/>
         <ref name="mei_model.scoreDefLike"/>
         <ref name="mei_model.sectionLike"/>
         <ref name="mei_model.sectionPart.mensuralAndNeumes"/>
         <ref name="mei_model.staffDefLike"/>
      </choice>
   </define>
   <define name="mei_model.sectionPart.mensuralAndNeumes">
      <choice>
         <ref name="mei_model.staffLike"/>
      </choice>
   </define>
   <define name="mei_model.staffDefLike">
      <notAllowed/>
   </define>
   <define name="mei_model.staffGrpLike">
      <notAllowed/>
   </define>
   <define name="mei_model.staffLike">
      <notAllowed/>
   </define>
   <define name="mei_model.staffLike_alternation">
      <notAllowed/>
   </define>
   <define name="mei_model.staffLike_sequence">
      <empty/>
   </define>
   <define name="mei_model.staffLike_sequenceOptional">
      <empty/>
   </define>
   <define name="mei_model.staffLike_sequenceOptionalRepeatable">
      <empty/>
   </define>
   <define name="mei_model.staffLike_sequenceRepeatable">
      <notAllowed/>
   </define>
   <define name="mei_model.sylLike">
      <notAllowed/>
   </define>
   <define name="mei_model.textComponentLike">
      <choice>
         <ref name="mei_model.pLike"/>
      </choice>
   </define>
   <define name="mei_model.textComponentLike_alternation">
      <choice>
         <ref name="mei_model.pLike_alternation"/>
      </choice>
   </define>
   <define name="mei_model.textComponentLike_sequence">
      <ref name="mei_model.pLike_sequence"/>
   </define>
   <define name="mei_model.textComponentLike_sequenceOptional">
      <optional>
         <ref name="mei_model.pLike_sequenceOptional"/>
      </optional>
   </define>
   <define name="mei_model.textComponentLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_model.pLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.textComponentLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_model.pLike_sequenceRepeatable"/>
      </oneOrMore>
   </define>
   <define name="mei_model.textPhraseLike">
      <choice>
         <ref name="mei_model.pbLike"/>
         <ref name="mei_model.textPhraseLike.limited"/>
      </choice>
   </define>
   <define name="mei_model.textPhraseLike.limited">
      <choice>
         <ref name="mei_model.addressLike"/>
         <ref name="mei_model.annotLike"/>
         <ref name="mei_model.biblLike"/>
         <ref name="mei_model.dateLike"/>
         <ref name="mei_model.dimLike"/>
         <ref name="mei_model.editorialLike"/>
         <ref name="mei_model.identifierLike"/>
         <ref name="mei_model.lbLike"/>
         <ref name="mei_model.measurementLike"/>
         <ref name="mei_model.nameLike"/>
         <ref name="mei_model.relationLike"/>
         <ref name="mei_model.rendLike"/>
         <ref name="mei_model.titleLike"/>
         <ref name="mei_extent"/>
      </choice>
   </define>
   <define name="mei_model.textPhraseLike.limited_alternation">
      <choice>
         <ref name="mei_model.addressLike_alternation"/>
         <ref name="mei_model.annotLike_alternation"/>
         <ref name="mei_model.biblLike_alternation"/>
         <ref name="mei_model.dateLike_alternation"/>
         <ref name="mei_model.dimLike_alternation"/>
         <ref name="mei_model.editorialLike_alternation"/>
         <ref name="mei_model.identifierLike_alternation"/>
         <ref name="mei_model.lbLike_alternation"/>
         <ref name="mei_model.measurementLike_alternation"/>
         <ref name="mei_model.nameLike_alternation"/>
         <ref name="mei_model.relationLike_alternation"/>
         <ref name="mei_model.rendLike_alternation"/>
         <ref name="mei_model.titleLike_alternation"/>
         <ref name="mei_extent"/>
      </choice>
   </define>
   <define name="mei_model.textPhraseLike.limited_sequence">
      <ref name="mei_model.addressLike_sequence"/>
      <ref name="mei_model.annotLike_sequence"/>
      <ref name="mei_model.biblLike_sequence"/>
      <ref name="mei_model.dateLike_sequence"/>
      <ref name="mei_model.dimLike_sequence"/>
      <ref name="mei_model.editorialLike_sequence"/>
      <ref name="mei_model.identifierLike_sequence"/>
      <ref name="mei_model.lbLike_sequence"/>
      <ref name="mei_model.measurementLike_sequence"/>
      <ref name="mei_model.nameLike_sequence"/>
      <ref name="mei_model.relationLike_sequence"/>
      <ref name="mei_model.rendLike_sequence"/>
      <ref name="mei_model.titleLike_sequence"/>
      <ref name="mei_extent"/>
   </define>
   <define name="mei_model.textPhraseLike.limited_sequenceOptional">
      <optional>
         <ref name="mei_model.addressLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.annotLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.biblLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.dateLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.dimLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.editorialLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.identifierLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.lbLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.measurementLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.nameLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.relationLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.rendLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_model.titleLike_sequenceOptional"/>
      </optional>
      <optional>
         <ref name="mei_extent"/>
      </optional>
   </define>
   <define name="mei_model.textPhraseLike.limited_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_model.addressLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.annotLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.biblLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.dateLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.dimLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.editorialLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.identifierLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.lbLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.measurementLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.nameLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.relationLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.rendLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_model.titleLike_sequenceOptionalRepeatable"/>
      </zeroOrMore>
      <zeroOrMore>
         <ref name="mei_extent"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.textPhraseLike.limited_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_model.addressLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.annotLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.biblLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.dateLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.dimLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.editorialLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.identifierLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.lbLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.measurementLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.nameLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.relationLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.rendLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_model.titleLike_sequenceRepeatable"/>
      </oneOrMore>
      <oneOrMore>
         <ref name="mei_extent"/>
      </oneOrMore>
   </define>
   <define name="mei_model.titleLike">
      <choice>
         <ref name="mei_title"/>
      </choice>
   </define>
   <define name="mei_model.titleLike_alternation">
      <choice>
         <ref name="mei_title"/>
      </choice>
   </define>
   <define name="mei_model.titleLike_sequence">
      <ref name="mei_title"/>
   </define>
   <define name="mei_model.titleLike_sequenceOptional">
      <optional>
         <ref name="mei_title"/>
      </optional>
   </define>
   <define name="mei_model.titleLike_sequenceOptionalRepeatable">
      <zeroOrMore>
         <ref name="mei_title"/>
      </zeroOrMore>
   </define>
   <define name="mei_model.titleLike_sequenceRepeatable">
      <oneOrMore>
         <ref name="mei_title"/>
      </oneOrMore>
   </define>
   <define name="mei_author">
      <element name="author">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">The name of the creator of the intellectual content of a non-musical, literary work.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.textPhraseLike.limited"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.evidence.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_bibl">
      <element name="bibl">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(bibliographic reference) – Provides a loosely-structured bibliographic citation in which the sub-components may or may not be explicitly marked.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.biblPart"/>
               <ref name="mei_model.imprintPart"/>
               <ref name="mei_model.textPhraseLike"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <ref name="mei_att.pointing.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_biblStruct">
      <element name="biblStruct">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(structured bibliographic citation) – Contains a bibliographic citation in which bibliographic sub-elements must appear in a specified order.</a:documentation>
         <group>
            <oneOrMore>
               <ref name="mei_monogr"/>
            </oneOrMore>
            <zeroOrMore>
               <choice>
                  <ref name="mei_model.annotLike"/>
               </choice>
            </zeroOrMore>
         </group>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.dataPointing.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <ref name="mei_att.pointing.attributes"/>
         <ref name="mei_att.recordType.attributes"/>
         <ref name="mei_att.targetEval.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_composer">
      <element name="composer">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">The name of the creator of the intellectual content of a musical work.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.textPhraseLike.limited"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.evidence.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_date">
      <element name="date">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">A string identifying a point in time or the time period between two such points.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.textPhraseLike"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.calendared.attributes"/>
         <ref name="mei_att.datable.attributes"/>
         <ref name="mei_att.edit.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_extent">
      <element name="extent">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Used to express size in terms other than physical dimensions, such as number of pages, records, bytes, physical components, etc.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.textPhraseLike.limited"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <ref name="mei_att.quantity.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_imprint">
      <element name="imprint">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Information relating to the publication or distribution of a bibliographic item.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.imprintPart"/>
               <ref name="mei_model.textPhraseLike"/>
               <ref name="mei_model.transcriptionLike"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_mei">
      <element name="mei">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains a single MEI-conformant document, consisting of an MEI header and a musical text, either in isolation or as part of an meiCorpus element.</a:documentation>
         <ref name="mei_meiHead"/>
         <ref name="mei_music"/>
         <pattern xmlns="http://purl.oclc.org/dsdl/schematron"
                  id="mei-mei-Check_staff-constraint-rule-24">
            <sch:rule xmlns:xi="http://www.w3.org/2001/XInclude"
                      xmlns:rng="http://relaxng.org/ns/structure/1.0"
                      xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                      xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
                      xmlns="http://www.tei-c.org/ns/1.0"
                      context="mei:*[@staff]">
               <sch:assert test="every $i in tokenize(normalize-space(@staff), '\s+') satisfies $i=//mei:staffDef/@n">The values in @staff must correspond to @n attribute of a staffDef
            element.</sch:assert>
            </sch:rule>
         </pattern>
         <ref name="mei_att.id.attributes"/>
         <ref name="mei_att.meiVersion.attributes"/>
         <ref name="mei_att.responsibility.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_monogr">
      <element name="monogr">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(monograph level) – Contains bibliographic elements describing an item, for example, a published book or journal, score, recording, or an unpublished manuscript.</a:documentation>
         <group>
            <optional>
               <choice>
                  <group>
                     <choice>
                        <ref name="mei_model.respLikePart"/>
                     </choice>
                     <zeroOrMore>
                        <choice>
                           <ref name="mei_model.respLikePart"/>
                        </choice>
                     </zeroOrMore>
                     <oneOrMore>
                        <ref name="mei_model.titleLike"/>
                     </oneOrMore>
                     <zeroOrMore>
                        <choice>
                           <ref name="mei_model.identifierLike"/>
                        </choice>
                     </zeroOrMore>
                  </group>
                  <group>
                     <oneOrMore>
                        <ref name="mei_model.titleLike"/>
                     </oneOrMore>
                     <zeroOrMore>
                        <choice>
                           <ref name="mei_model.respLikePart"/>
                           <ref name="mei_model.identifierLike"/>
                        </choice>
                     </zeroOrMore>
                  </group>
               </choice>
            </optional>
            <zeroOrMore>
               <choice>
                  <ref name="mei_model.annotLike"/>
               </choice>
            </zeroOrMore>
            <zeroOrMore>
               <ref name="mei_model.editionLike"/>
               <zeroOrMore>
                  <choice>
                     <ref name="mei_model.identifierLike"/>
                  </choice>
               </zeroOrMore>
            </zeroOrMore>
            <ref name="mei_imprint"/>
            <zeroOrMore>
               <choice>
                  <ref name="mei_imprint"/>
                  <ref name="mei_extent"/>
               </choice>
            </zeroOrMore>
         </group>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.dataPointing.attributes"/>
         <ref name="mei_att.pointing.attributes"/>
         <ref name="mei_att.recordType.attributes"/>
         <ref name="mei_att.targetEval.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_music">
      <element name="music">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Contains a single musical text of any kind, whether unitary or composite, for example, an etude, opera, song cycle, symphony, or anthology of piano solos.</a:documentation>
         <empty/>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.meiVersion.attributes"/>
         <ref name="mei_att.metadataPointing.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_publisher">
      <element name="publisher">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Name of the organization responsible for the publication of a bibliographic item.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.textPhraseLike.limited"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_pubPlace">
      <element name="pubPlace">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">(publication place) – Name of the place where a bibliographic item was published.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_model.textPhraseLike.limited"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.common.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <empty/>
      </element>
   </define>
   <define name="mei_title">
      <element name="title">
         <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Title of a bibliographic entity.</a:documentation>
         <zeroOrMore>
            <choice>
               <text/>
               <ref name="mei_macro.titlePart"/>
               <ref name="mei_model.editLike"/>
               <ref name="mei_model.transcriptionLike"/>
            </choice>
         </zeroOrMore>
         <ref name="mei_att.authorized.attributes"/>
         <ref name="mei_att.basic.attributes"/>
         <ref name="mei_att.bibl.attributes"/>
         <ref name="mei_att.classed.attributes"/>
         <ref name="mei_att.filing.attributes"/>
         <ref name="mei_att.labelled.attributes"/>
         <ref name="mei_att.lang.attributes"/>
         <ref name="mei_att.linking.attributes"/>
         <ref name="mei_att.nNumberLike.attributes"/>
         <ref name="mei_att.responsibility.attributes"/>
         <optional>
            <attribute name="level">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Indicates the bibliographic level of the title.</a:documentation>
               <choice>
                  <value>a</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Analyzed component, such as an article or chapter, within a larger bibliographic entity.</a:documentation>
                  <value>c</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Collection. A group of items that were not originally published, distributed, or produced together.</a:documentation>
                  <value>d</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Subunit of a collection, e.g. item, folder, box, archival series, subgroup, or subcollection.</a:documentation>
                  <value>i</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Integrating resource, such as a continuously updated loose-leaf service or Web site.</a:documentation>
                  <value>m</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Monograph.</a:documentation>
                  <value>j</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Journal.</a:documentation>
                  <value>s</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Series.</a:documentation>
                  <value>u</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Unpublished (including theses and dissertations unless published by a commercial press).</a:documentation>
               </choice>
            </attribute>
         </optional>
         <optional>
            <attribute name="type">
               <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Characterizes the title in some sense, using any convenient classification scheme or typology that employs single-token labels.
Suggested values include: 1] main; 2] subordinate; 3] abbreviated; 4] alternative; 5] translated; 6] uniform; 7] desc</a:documentation>
               <choice>
                  <value>main</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Main title.</a:documentation>
                  <value>subordinate</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Subtitle or title of part.</a:documentation>
                  <value>abbreviated</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Abbreviated form of title.</a:documentation>
                  <value>alternative</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Alternate title by which the item is also known.</a:documentation>
                  <value>translated</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Translated form of title.</a:documentation>
                  <value>uniform</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Collective title.</a:documentation>
                  <value>desc</value>
                  <a:documentation xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">Descriptive paraphrase of the work.</a:documentation>
                  <data type="NMTOKENS"/>
               </choice>
            </attribute>
         </optional>
         <empty/>
      </element>
   </define>
   <start>
      <choice>
         <ref name="mei_mei"/>
         <ref name="mei_meiHead"/>
         <ref name="mei_music"/>
      </choice>
   </start>
   <ns xmlns="http://purl.oclc.org/dsdl/schematron"
       prefix="mei"
       uri="http://www.music-encoding.org/ns/mei"/> 
   <ns xmlns="http://purl.oclc.org/dsdl/schematron"
       prefix="xlink"
       uri="http://www.w3.org/1999/xlink"/>
</grammar>
